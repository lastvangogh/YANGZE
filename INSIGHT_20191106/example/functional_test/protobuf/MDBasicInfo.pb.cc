// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MDBasicInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MDBasicInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

namespace {

const ::google::protobuf::Descriptor* MDBasicInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MDBasicInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MDBasicInfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_MDBasicInfo_2eproto() {
  protobuf_AddDesc_MDBasicInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MDBasicInfo.proto");
  GOOGLE_CHECK(file != NULL);
  MDBasicInfo_descriptor_ = file->message_type(0);
  static const int MDBasicInfo_offsets_[86] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, htscsecurityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, securityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, chispelling_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, englishname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, securityidsource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, securitytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, securitysubtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, listdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, outstandingshare_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, publicfloatsharequantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, mddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, tradingphasecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, preclosepx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, maxpx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, minpx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, lotsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, shortsellflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, exchangedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, exchangesymbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, ticksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, loanmarginindicator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, pxaccuracy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, ipoprofitable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, diffrightsindicator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optioncontractid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optioncontractsymbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionunderlyingsecurityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionunderlyingsymbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionunderlyingtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionoptiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optioncallorput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optioncontractmultiplierunit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionexerciseprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionstartdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionenddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionexercisedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optiondeliverydate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionexpiredate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionupdateversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optiontotallongposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionsecurityclosepx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionsettlprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionunderlyingclosepx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionpricelimittype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optiondailypriceuplimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optiondailypricedownlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionmarginunit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionmarginratioparam1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionmarginratioparam2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionroundlot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionlmtordminfloor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionlmtordmaxfloor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionmktordminfloor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionmktordmaxfloor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionticksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, optionsecuritystatusflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fitradeproducttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fisecurityproperty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fisecuritystatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fipledgedsecurityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fiopentime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, ficlosetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fiissuemode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fifaceamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fiissueprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fiinteresttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fiinterestfrequency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, figuaranteedinterestrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fibaseinterestrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fiquotedmargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fitimelimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fitotalissuance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fiissuestartdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fiissueenddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, filistdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fiexpiredate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, finationaldebttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fiissuemethod_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, ficrossmarket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fishortsellflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fitotalshortsellquota_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fidealershortsellquota_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fipreclosepx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, fipreweightedpx_),
  };
  MDBasicInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MDBasicInfo_descriptor_,
      MDBasicInfo::internal_default_instance(),
      MDBasicInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(MDBasicInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MDBasicInfo, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MDBasicInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MDBasicInfo_descriptor_, MDBasicInfo::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MDBasicInfo_2eproto() {
  MDBasicInfo_default_instance_.Shutdown();
  delete MDBasicInfo_reflection_;
}

void protobuf_InitDefaults_MDBasicInfo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::htsc::mdc::model::protobuf_InitDefaults_ESecurityIDSource_2eproto();
  ::com::htsc::mdc::model::protobuf_InitDefaults_ESecurityType_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  MDBasicInfo_default_instance_.DefaultConstruct();
  MDBasicInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_MDBasicInfo_2eproto_once_);
void protobuf_InitDefaults_MDBasicInfo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_MDBasicInfo_2eproto_once_,
                 &protobuf_InitDefaults_MDBasicInfo_2eproto_impl);
}
void protobuf_AddDesc_MDBasicInfo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_MDBasicInfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021MDBasicInfo.proto\022\032com.htsc.mdc.insigh"
    "t.model\032\027ESecurityIDSource.proto\032\023ESecur"
    "ityType.proto\"\200\022\n\013MDBasicInfo\022\026\n\016HTSCSec"
    "urityID\030\001 \001(\t\022\022\n\nSecurityID\030\002 \001(\t\022\016\n\006Sym"
    "bol\030\003 \001(\t\022\023\n\013ChiSpelling\030\004 \001(\t\022\023\n\013Englis"
    "hName\030\005 \001(\t\022\?\n\020securityIDSource\030\006 \001(\0162%."
    "com.htsc.mdc.model.ESecurityIDSource\0227\n\014"
    "securityType\030\007 \001(\0162!.com.htsc.mdc.model."
    "ESecurityType\022\027\n\017SecuritySubType\030\010 \001(\t\022\020"
    "\n\010ListDate\030\t \001(\t\022\020\n\010Currency\030\n \001(\t\022\030\n\020Ou"
    "tstandingShare\030\013 \001(\003\022 \n\030PublicFloatShare"
    "Quantity\030\014 \001(\003\022\016\n\006MDDate\030\r \001(\005\022\030\n\020Tradin"
    "gPhaseCode\030\016 \001(\t\022\022\n\nPreClosePx\030\017 \001(\003\022\r\n\005"
    "MaxPx\030\020 \001(\003\022\r\n\005MinPx\030\021 \001(\003\022\017\n\007LotSize\030\022 "
    "\001(\003\022\025\n\rShortSellFlag\030\023 \001(\010\022\024\n\014ExchangeDa"
    "te\030\024 \001(\t\022\026\n\016ExchangeSymbol\030\025 \001(\t\022\020\n\010Tick"
    "Size\030\026 \001(\001\022\033\n\023LoanMarginIndicator\030\027 \001(\005\022"
    "\022\n\nPxAccuracy\030\030 \001(\005\022\025\n\rIPOProfitable\030\031 \001"
    "(\005\022\033\n\023DiffRightsIndicator\030\032 \001(\005\022\030\n\020Optio"
    "nContractID\030( \001(\t\022\034\n\024OptionContractSymbo"
    "l\030) \001(\t\022\"\n\032OptionUnderlyingSecurityID\030* "
    "\001(\t\022\036\n\026OptionUnderlyingSymbol\030+ \001(\t\022\034\n\024O"
    "ptionUnderlyingType\030, \001(\t\022\030\n\020OptionOptio"
    "nType\030- \001(\t\022\027\n\017OptionCallOrPut\030. \001(\t\022$\n\034"
    "OptionContractMultiplierUnit\030/ \001(\003\022\033\n\023Op"
    "tionExercisePrice\0300 \001(\001\022\027\n\017OptionStartDa"
    "te\0301 \001(\t\022\025\n\rOptionEndDate\0302 \001(\t\022\032\n\022Optio"
    "nExerciseDate\0303 \001(\t\022\032\n\022OptionDeliveryDat"
    "e\0304 \001(\t\022\030\n\020OptionExpireDate\0305 \001(\t\022\033\n\023Opt"
    "ionUpdateVersion\0306 \001(\t\022\037\n\027OptionTotalLon"
    "gPosition\0307 \001(\003\022\035\n\025OptionSecurityClosePx"
    "\0308 \001(\001\022\030\n\020OptionSettlPrice\0309 \001(\001\022\037\n\027Opti"
    "onUnderlyingClosePx\030: \001(\001\022\034\n\024OptionPrice"
    "LimitType\030; \001(\t\022\037\n\027OptionDailyPriceUpLim"
    "it\030< \001(\001\022!\n\031OptionDailyPriceDownLimit\030= "
    "\001(\001\022\030\n\020OptionMarginUnit\030> \001(\001\022\037\n\027OptionM"
    "arginRatioParam1\030\? \001(\001\022\037\n\027OptionMarginRa"
    "tioParam2\030@ \001(\001\022\026\n\016OptionRoundLot\030A \001(\003\022"
    "\034\n\024OptionLmtOrdMinFloor\030B \001(\003\022\034\n\024OptionL"
    "mtOrdMaxFloor\030C \001(\003\022\034\n\024OptionMktOrdMinFl"
    "oor\030D \001(\003\022\034\n\024OptionMktOrdMaxFloor\030E \001(\003\022"
    "\026\n\016OptionTickSize\030F \001(\001\022 \n\030OptionSecurit"
    "yStatusFlag\030G \001(\t\022\032\n\022FITradeProductType\030"
    "P \001(\t\022\032\n\022FISecurityProperty\030Q \001(\t\022\030\n\020FIS"
    "ecurityStatus\030R \001(\t\022\033\n\023FIPledgedSecurity"
    "ID\030S \001(\t\022\022\n\nFIOpenTime\030T \001(\t\022\023\n\013FICloseT"
    "ime\030U \001(\t\022\023\n\013FIIssueMode\030V \001(\t\022\024\n\014FIFace"
    "Amount\030W \001(\001\022\024\n\014FIIssuePrice\030X \001(\001\022\026\n\016FI"
    "InterestType\030Y \001(\t\022\033\n\023FIInterestFrequenc"
    "y\030Z \001(\t\022 \n\030FIGuaranteedInterestRate\030[ \001("
    "\001\022\032\n\022FIBaseInterestRate\030\\ \001(\001\022\026\n\016FIQuote"
    "dMargin\030] \001(\001\022\023\n\013FITimeLimit\030^ \001(\005\022\027\n\017FI"
    "TotalIssuance\030_ \001(\001\022\030\n\020FIIssueStartDate\030"
    "` \001(\t\022\026\n\016FIIssueEndDate\030a \001(\t\022\022\n\nFIListD"
    "ate\030b \001(\t\022\024\n\014FIExpireDate\030c \001(\t\022\032\n\022FINat"
    "ionalDebtType\030d \001(\t\022\025\n\rFIIssueMethod\030e \001"
    "(\t\022\025\n\rFICrossMarket\030f \001(\010\022\027\n\017FIShortSell"
    "Flag\030g \001(\010\022\035\n\025FITotalShortSellQuota\030h \001("
    "\001\022\036\n\026FIDealerShortSellQuota\030i \001(\001\022\024\n\014FIP"
    "reClosePx\030j \001(\001\022\027\n\017FIPreWeightedPx\030k \001(\001"
    "B4\n\032com.htsc.mdc.insight.modelB\021MDBasicI"
    "nfoProtosH\001\240\001\001b\006proto3", 2462);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MDBasicInfo.proto", &protobuf_RegisterTypes);
  ::com::htsc::mdc::model::protobuf_AddDesc_ESecurityIDSource_2eproto();
  ::com::htsc::mdc::model::protobuf_AddDesc_ESecurityType_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MDBasicInfo_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_MDBasicInfo_2eproto_once_);
void protobuf_AddDesc_MDBasicInfo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_MDBasicInfo_2eproto_once_,
                 &protobuf_AddDesc_MDBasicInfo_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MDBasicInfo_2eproto {
  StaticDescriptorInitializer_MDBasicInfo_2eproto() {
    protobuf_AddDesc_MDBasicInfo_2eproto();
  }
} static_descriptor_initializer_MDBasicInfo_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MDBasicInfo::kHTSCSecurityIDFieldNumber;
const int MDBasicInfo::kSecurityIDFieldNumber;
const int MDBasicInfo::kSymbolFieldNumber;
const int MDBasicInfo::kChiSpellingFieldNumber;
const int MDBasicInfo::kEnglishNameFieldNumber;
const int MDBasicInfo::kSecurityIDSourceFieldNumber;
const int MDBasicInfo::kSecurityTypeFieldNumber;
const int MDBasicInfo::kSecuritySubTypeFieldNumber;
const int MDBasicInfo::kListDateFieldNumber;
const int MDBasicInfo::kCurrencyFieldNumber;
const int MDBasicInfo::kOutstandingShareFieldNumber;
const int MDBasicInfo::kPublicFloatShareQuantityFieldNumber;
const int MDBasicInfo::kMDDateFieldNumber;
const int MDBasicInfo::kTradingPhaseCodeFieldNumber;
const int MDBasicInfo::kPreClosePxFieldNumber;
const int MDBasicInfo::kMaxPxFieldNumber;
const int MDBasicInfo::kMinPxFieldNumber;
const int MDBasicInfo::kLotSizeFieldNumber;
const int MDBasicInfo::kShortSellFlagFieldNumber;
const int MDBasicInfo::kExchangeDateFieldNumber;
const int MDBasicInfo::kExchangeSymbolFieldNumber;
const int MDBasicInfo::kTickSizeFieldNumber;
const int MDBasicInfo::kLoanMarginIndicatorFieldNumber;
const int MDBasicInfo::kPxAccuracyFieldNumber;
const int MDBasicInfo::kIPOProfitableFieldNumber;
const int MDBasicInfo::kDiffRightsIndicatorFieldNumber;
const int MDBasicInfo::kOptionContractIDFieldNumber;
const int MDBasicInfo::kOptionContractSymbolFieldNumber;
const int MDBasicInfo::kOptionUnderlyingSecurityIDFieldNumber;
const int MDBasicInfo::kOptionUnderlyingSymbolFieldNumber;
const int MDBasicInfo::kOptionUnderlyingTypeFieldNumber;
const int MDBasicInfo::kOptionOptionTypeFieldNumber;
const int MDBasicInfo::kOptionCallOrPutFieldNumber;
const int MDBasicInfo::kOptionContractMultiplierUnitFieldNumber;
const int MDBasicInfo::kOptionExercisePriceFieldNumber;
const int MDBasicInfo::kOptionStartDateFieldNumber;
const int MDBasicInfo::kOptionEndDateFieldNumber;
const int MDBasicInfo::kOptionExerciseDateFieldNumber;
const int MDBasicInfo::kOptionDeliveryDateFieldNumber;
const int MDBasicInfo::kOptionExpireDateFieldNumber;
const int MDBasicInfo::kOptionUpdateVersionFieldNumber;
const int MDBasicInfo::kOptionTotalLongPositionFieldNumber;
const int MDBasicInfo::kOptionSecurityClosePxFieldNumber;
const int MDBasicInfo::kOptionSettlPriceFieldNumber;
const int MDBasicInfo::kOptionUnderlyingClosePxFieldNumber;
const int MDBasicInfo::kOptionPriceLimitTypeFieldNumber;
const int MDBasicInfo::kOptionDailyPriceUpLimitFieldNumber;
const int MDBasicInfo::kOptionDailyPriceDownLimitFieldNumber;
const int MDBasicInfo::kOptionMarginUnitFieldNumber;
const int MDBasicInfo::kOptionMarginRatioParam1FieldNumber;
const int MDBasicInfo::kOptionMarginRatioParam2FieldNumber;
const int MDBasicInfo::kOptionRoundLotFieldNumber;
const int MDBasicInfo::kOptionLmtOrdMinFloorFieldNumber;
const int MDBasicInfo::kOptionLmtOrdMaxFloorFieldNumber;
const int MDBasicInfo::kOptionMktOrdMinFloorFieldNumber;
const int MDBasicInfo::kOptionMktOrdMaxFloorFieldNumber;
const int MDBasicInfo::kOptionTickSizeFieldNumber;
const int MDBasicInfo::kOptionSecurityStatusFlagFieldNumber;
const int MDBasicInfo::kFITradeProductTypeFieldNumber;
const int MDBasicInfo::kFISecurityPropertyFieldNumber;
const int MDBasicInfo::kFISecurityStatusFieldNumber;
const int MDBasicInfo::kFIPledgedSecurityIDFieldNumber;
const int MDBasicInfo::kFIOpenTimeFieldNumber;
const int MDBasicInfo::kFICloseTimeFieldNumber;
const int MDBasicInfo::kFIIssueModeFieldNumber;
const int MDBasicInfo::kFIFaceAmountFieldNumber;
const int MDBasicInfo::kFIIssuePriceFieldNumber;
const int MDBasicInfo::kFIInterestTypeFieldNumber;
const int MDBasicInfo::kFIInterestFrequencyFieldNumber;
const int MDBasicInfo::kFIGuaranteedInterestRateFieldNumber;
const int MDBasicInfo::kFIBaseInterestRateFieldNumber;
const int MDBasicInfo::kFIQuotedMarginFieldNumber;
const int MDBasicInfo::kFITimeLimitFieldNumber;
const int MDBasicInfo::kFITotalIssuanceFieldNumber;
const int MDBasicInfo::kFIIssueStartDateFieldNumber;
const int MDBasicInfo::kFIIssueEndDateFieldNumber;
const int MDBasicInfo::kFIListDateFieldNumber;
const int MDBasicInfo::kFIExpireDateFieldNumber;
const int MDBasicInfo::kFINationalDebtTypeFieldNumber;
const int MDBasicInfo::kFIIssueMethodFieldNumber;
const int MDBasicInfo::kFICrossMarketFieldNumber;
const int MDBasicInfo::kFIShortSellFlagFieldNumber;
const int MDBasicInfo::kFITotalShortSellQuotaFieldNumber;
const int MDBasicInfo::kFIDealerShortSellQuotaFieldNumber;
const int MDBasicInfo::kFIPreClosePxFieldNumber;
const int MDBasicInfo::kFIPreWeightedPxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MDBasicInfo::MDBasicInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_MDBasicInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.MDBasicInfo)
}

void MDBasicInfo::InitAsDefaultInstance() {
}

MDBasicInfo::MDBasicInfo(const MDBasicInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.MDBasicInfo)
}

void MDBasicInfo::SharedCtor() {
  htscsecurityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chispelling_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  englishname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securitysubtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradingphasecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangesymbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optioncontractid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optioncontractsymbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionunderlyingsecurityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionunderlyingsymbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionunderlyingtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionoptiontype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optioncallorput_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionstartdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionexercisedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optiondeliverydate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionexpiredate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionupdateversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionpricelimittype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionsecuritystatusflag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fitradeproducttype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fisecurityproperty_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fisecuritystatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fipledgedsecurityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiopentime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ficlosetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiissuemode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiinteresttype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiinterestfrequency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiissuestartdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiissueenddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filistdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiexpiredate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finationaldebttype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiissuemethod_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&securityidsource_, 0, reinterpret_cast<char*>(&fitimelimit_) -
    reinterpret_cast<char*>(&securityidsource_) + sizeof(fitimelimit_));
  _cached_size_ = 0;
}

MDBasicInfo::~MDBasicInfo() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.MDBasicInfo)
  SharedDtor();
}

void MDBasicInfo::SharedDtor() {
  htscsecurityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chispelling_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  englishname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securitysubtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradingphasecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangesymbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optioncontractid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optioncontractsymbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionunderlyingsecurityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionunderlyingsymbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionunderlyingtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionoptiontype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optioncallorput_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionstartdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionenddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionexercisedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optiondeliverydate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionexpiredate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionupdateversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionpricelimittype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionsecuritystatusflag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fitradeproducttype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fisecurityproperty_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fisecuritystatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fipledgedsecurityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiopentime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ficlosetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiissuemode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiinteresttype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiinterestfrequency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiissuestartdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiissueenddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filistdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiexpiredate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finationaldebttype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiissuemethod_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MDBasicInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MDBasicInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MDBasicInfo_descriptor_;
}

const MDBasicInfo& MDBasicInfo::default_instance() {
  protobuf_InitDefaults_MDBasicInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MDBasicInfo> MDBasicInfo_default_instance_;

MDBasicInfo* MDBasicInfo::New(::google::protobuf::Arena* arena) const {
  MDBasicInfo* n = new MDBasicInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MDBasicInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.MDBasicInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MDBasicInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MDBasicInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(securityidsource_, securitytype_);
  htscsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chispelling_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  englishname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securitysubtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(outstandingshare_, maxpx_);
  listdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mddate_ = 0;
  tradingphasecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(minpx_, lotsize_);
  ZR_(loanmarginindicator_, pxaccuracy_);
  shortsellflag_ = false;
  exchangedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangesymbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ipoprofitable_ = 0;
  diffrightsindicator_ = 0;
  optioncontractid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optioncontractsymbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionunderlyingsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionunderlyingsymbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionunderlyingtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionoptiontype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(optioncontractmultiplierunit_, optionexerciseprice_);
  optioncallorput_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionstartdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionexercisedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optiondeliverydate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionexpiredate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(optiontotallongposition_, optiondailypricedownlimit_);
  optionupdateversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionpricelimittype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(optionmarginunit_, optionroundlot_);
  ZR_(optionlmtordminfloor_, optionmktordmaxfloor_);
  optionticksize_ = 0;
  optionsecuritystatusflag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fitradeproducttype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fisecurityproperty_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fisecuritystatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fipledgedsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiopentime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ficlosetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(fifaceamount_, fiquotedmargin_);
  fiissuemode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiinteresttype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiinterestfrequency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fitimelimit_ = 0;
  fitotalissuance_ = 0;
  fiissuestartdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiissueenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filistdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiexpiredate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finationaldebttype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fiissuemethod_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(ficrossmarket_, fishortsellflag_);
  ZR_(fitotalshortsellquota_, fipreweightedpx_);

#undef ZR_HELPER_
#undef ZR_

}

bool MDBasicInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.MDBasicInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string HTSCSecurityID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htscsecurityid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->htscsecurityid().data(), this->htscsecurityid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.HTSCSecurityID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SecurityID;
        break;
      }

      // optional string SecurityID = 2;
      case 2: {
        if (tag == 18) {
         parse_SecurityID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securityid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->securityid().data(), this->securityid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.SecurityID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Symbol;
        break;
      }

      // optional string Symbol = 3;
      case 3: {
        if (tag == 26) {
         parse_Symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.Symbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ChiSpelling;
        break;
      }

      // optional string ChiSpelling = 4;
      case 4: {
        if (tag == 34) {
         parse_ChiSpelling:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chispelling()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chispelling().data(), this->chispelling().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.ChiSpelling"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_EnglishName;
        break;
      }

      // optional string EnglishName = 5;
      case 5: {
        if (tag == 42) {
         parse_EnglishName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_englishname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->englishname().data(), this->englishname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.EnglishName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_securityIDSource;
        break;
      }

      // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
      case 6: {
        if (tag == 48) {
         parse_securityIDSource:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securityidsource(static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_securityType;
        break;
      }

      // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
      case 7: {
        if (tag == 56) {
         parse_securityType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securitytype(static_cast< ::com::htsc::mdc::model::ESecurityType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_SecuritySubType;
        break;
      }

      // optional string SecuritySubType = 8;
      case 8: {
        if (tag == 66) {
         parse_SecuritySubType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitysubtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->securitysubtype().data(), this->securitysubtype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.SecuritySubType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_ListDate;
        break;
      }

      // optional string ListDate = 9;
      case 9: {
        if (tag == 74) {
         parse_ListDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->listdate().data(), this->listdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.ListDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_Currency;
        break;
      }

      // optional string Currency = 10;
      case 10: {
        if (tag == 82) {
         parse_Currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency().data(), this->currency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.Currency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_OutstandingShare;
        break;
      }

      // optional int64 OutstandingShare = 11;
      case 11: {
        if (tag == 88) {
         parse_OutstandingShare:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &outstandingshare_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_PublicFloatShareQuantity;
        break;
      }

      // optional int64 PublicFloatShareQuantity = 12;
      case 12: {
        if (tag == 96) {
         parse_PublicFloatShareQuantity:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &publicfloatsharequantity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_MDDate;
        break;
      }

      // optional int32 MDDate = 13;
      case 13: {
        if (tag == 104) {
         parse_MDDate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mddate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_TradingPhaseCode;
        break;
      }

      // optional string TradingPhaseCode = 14;
      case 14: {
        if (tag == 114) {
         parse_TradingPhaseCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradingphasecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradingphasecode().data(), this->tradingphasecode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.TradingPhaseCode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_PreClosePx;
        break;
      }

      // optional int64 PreClosePx = 15;
      case 15: {
        if (tag == 120) {
         parse_PreClosePx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &preclosepx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_MaxPx;
        break;
      }

      // optional int64 MaxPx = 16;
      case 16: {
        if (tag == 128) {
         parse_MaxPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_MinPx;
        break;
      }

      // optional int64 MinPx = 17;
      case 17: {
        if (tag == 136) {
         parse_MinPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &minpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_LotSize;
        break;
      }

      // optional int64 LotSize = 18;
      case 18: {
        if (tag == 144) {
         parse_LotSize:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lotsize_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_ShortSellFlag;
        break;
      }

      // optional bool ShortSellFlag = 19;
      case 19: {
        if (tag == 152) {
         parse_ShortSellFlag:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &shortsellflag_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_ExchangeDate;
        break;
      }

      // optional string ExchangeDate = 20;
      case 20: {
        if (tag == 162) {
         parse_ExchangeDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchangedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchangedate().data(), this->exchangedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.ExchangeDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_ExchangeSymbol;
        break;
      }

      // optional string ExchangeSymbol = 21;
      case 21: {
        if (tag == 170) {
         parse_ExchangeSymbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchangesymbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchangesymbol().data(), this->exchangesymbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.ExchangeSymbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_TickSize;
        break;
      }

      // optional double TickSize = 22;
      case 22: {
        if (tag == 177) {
         parse_TickSize:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ticksize_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_LoanMarginIndicator;
        break;
      }

      // optional int32 LoanMarginIndicator = 23;
      case 23: {
        if (tag == 184) {
         parse_LoanMarginIndicator:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loanmarginindicator_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_PxAccuracy;
        break;
      }

      // optional int32 PxAccuracy = 24;
      case 24: {
        if (tag == 192) {
         parse_PxAccuracy:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pxaccuracy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_IPOProfitable;
        break;
      }

      // optional int32 IPOProfitable = 25;
      case 25: {
        if (tag == 200) {
         parse_IPOProfitable:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ipoprofitable_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_DiffRightsIndicator;
        break;
      }

      // optional int32 DiffRightsIndicator = 26;
      case 26: {
        if (tag == 208) {
         parse_DiffRightsIndicator:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diffrightsindicator_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(322)) goto parse_OptionContractID;
        break;
      }

      // optional string OptionContractID = 40;
      case 40: {
        if (tag == 322) {
         parse_OptionContractID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optioncontractid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optioncontractid().data(), this->optioncontractid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionContractID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_OptionContractSymbol;
        break;
      }

      // optional string OptionContractSymbol = 41;
      case 41: {
        if (tag == 330) {
         parse_OptionContractSymbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optioncontractsymbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optioncontractsymbol().data(), this->optioncontractsymbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionContractSymbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(338)) goto parse_OptionUnderlyingSecurityID;
        break;
      }

      // optional string OptionUnderlyingSecurityID = 42;
      case 42: {
        if (tag == 338) {
         parse_OptionUnderlyingSecurityID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionunderlyingsecurityid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionunderlyingsecurityid().data(), this->optionunderlyingsecurityid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSecurityID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(346)) goto parse_OptionUnderlyingSymbol;
        break;
      }

      // optional string OptionUnderlyingSymbol = 43;
      case 43: {
        if (tag == 346) {
         parse_OptionUnderlyingSymbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionunderlyingsymbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionunderlyingsymbol().data(), this->optionunderlyingsymbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSymbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_OptionUnderlyingType;
        break;
      }

      // optional string OptionUnderlyingType = 44;
      case 44: {
        if (tag == 354) {
         parse_OptionUnderlyingType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionunderlyingtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionunderlyingtype().data(), this->optionunderlyingtype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(362)) goto parse_OptionOptionType;
        break;
      }

      // optional string OptionOptionType = 45;
      case 45: {
        if (tag == 362) {
         parse_OptionOptionType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionoptiontype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionoptiontype().data(), this->optionoptiontype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionOptionType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(370)) goto parse_OptionCallOrPut;
        break;
      }

      // optional string OptionCallOrPut = 46;
      case 46: {
        if (tag == 370) {
         parse_OptionCallOrPut:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optioncallorput()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optioncallorput().data(), this->optioncallorput().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionCallOrPut"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(376)) goto parse_OptionContractMultiplierUnit;
        break;
      }

      // optional int64 OptionContractMultiplierUnit = 47;
      case 47: {
        if (tag == 376) {
         parse_OptionContractMultiplierUnit:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optioncontractmultiplierunit_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(385)) goto parse_OptionExercisePrice;
        break;
      }

      // optional double OptionExercisePrice = 48;
      case 48: {
        if (tag == 385) {
         parse_OptionExercisePrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optionexerciseprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(394)) goto parse_OptionStartDate;
        break;
      }

      // optional string OptionStartDate = 49;
      case 49: {
        if (tag == 394) {
         parse_OptionStartDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionstartdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionstartdate().data(), this->optionstartdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionStartDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_OptionEndDate;
        break;
      }

      // optional string OptionEndDate = 50;
      case 50: {
        if (tag == 402) {
         parse_OptionEndDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionenddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionenddate().data(), this->optionenddate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionEndDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_OptionExerciseDate;
        break;
      }

      // optional string OptionExerciseDate = 51;
      case 51: {
        if (tag == 410) {
         parse_OptionExerciseDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionexercisedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionexercisedate().data(), this->optionexercisedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionExerciseDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_OptionDeliveryDate;
        break;
      }

      // optional string OptionDeliveryDate = 52;
      case 52: {
        if (tag == 418) {
         parse_OptionDeliveryDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optiondeliverydate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optiondeliverydate().data(), this->optiondeliverydate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionDeliveryDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(426)) goto parse_OptionExpireDate;
        break;
      }

      // optional string OptionExpireDate = 53;
      case 53: {
        if (tag == 426) {
         parse_OptionExpireDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionexpiredate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionexpiredate().data(), this->optionexpiredate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionExpireDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(434)) goto parse_OptionUpdateVersion;
        break;
      }

      // optional string OptionUpdateVersion = 54;
      case 54: {
        if (tag == 434) {
         parse_OptionUpdateVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionupdateversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionupdateversion().data(), this->optionupdateversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionUpdateVersion"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(440)) goto parse_OptionTotalLongPosition;
        break;
      }

      // optional int64 OptionTotalLongPosition = 55;
      case 55: {
        if (tag == 440) {
         parse_OptionTotalLongPosition:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optiontotallongposition_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(449)) goto parse_OptionSecurityClosePx;
        break;
      }

      // optional double OptionSecurityClosePx = 56;
      case 56: {
        if (tag == 449) {
         parse_OptionSecurityClosePx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optionsecurityclosepx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(457)) goto parse_OptionSettlPrice;
        break;
      }

      // optional double OptionSettlPrice = 57;
      case 57: {
        if (tag == 457) {
         parse_OptionSettlPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optionsettlprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(465)) goto parse_OptionUnderlyingClosePx;
        break;
      }

      // optional double OptionUnderlyingClosePx = 58;
      case 58: {
        if (tag == 465) {
         parse_OptionUnderlyingClosePx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optionunderlyingclosepx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(474)) goto parse_OptionPriceLimitType;
        break;
      }

      // optional string OptionPriceLimitType = 59;
      case 59: {
        if (tag == 474) {
         parse_OptionPriceLimitType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionpricelimittype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionpricelimittype().data(), this->optionpricelimittype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionPriceLimitType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(481)) goto parse_OptionDailyPriceUpLimit;
        break;
      }

      // optional double OptionDailyPriceUpLimit = 60;
      case 60: {
        if (tag == 481) {
         parse_OptionDailyPriceUpLimit:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optiondailypriceuplimit_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(489)) goto parse_OptionDailyPriceDownLimit;
        break;
      }

      // optional double OptionDailyPriceDownLimit = 61;
      case 61: {
        if (tag == 489) {
         parse_OptionDailyPriceDownLimit:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optiondailypricedownlimit_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(497)) goto parse_OptionMarginUnit;
        break;
      }

      // optional double OptionMarginUnit = 62;
      case 62: {
        if (tag == 497) {
         parse_OptionMarginUnit:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optionmarginunit_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(505)) goto parse_OptionMarginRatioParam1;
        break;
      }

      // optional double OptionMarginRatioParam1 = 63;
      case 63: {
        if (tag == 505) {
         parse_OptionMarginRatioParam1:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optionmarginratioparam1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(513)) goto parse_OptionMarginRatioParam2;
        break;
      }

      // optional double OptionMarginRatioParam2 = 64;
      case 64: {
        if (tag == 513) {
         parse_OptionMarginRatioParam2:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optionmarginratioparam2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(520)) goto parse_OptionRoundLot;
        break;
      }

      // optional int64 OptionRoundLot = 65;
      case 65: {
        if (tag == 520) {
         parse_OptionRoundLot:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optionroundlot_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(528)) goto parse_OptionLmtOrdMinFloor;
        break;
      }

      // optional int64 OptionLmtOrdMinFloor = 66;
      case 66: {
        if (tag == 528) {
         parse_OptionLmtOrdMinFloor:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optionlmtordminfloor_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(536)) goto parse_OptionLmtOrdMaxFloor;
        break;
      }

      // optional int64 OptionLmtOrdMaxFloor = 67;
      case 67: {
        if (tag == 536) {
         parse_OptionLmtOrdMaxFloor:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optionlmtordmaxfloor_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(544)) goto parse_OptionMktOrdMinFloor;
        break;
      }

      // optional int64 OptionMktOrdMinFloor = 68;
      case 68: {
        if (tag == 544) {
         parse_OptionMktOrdMinFloor:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optionmktordminfloor_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(552)) goto parse_OptionMktOrdMaxFloor;
        break;
      }

      // optional int64 OptionMktOrdMaxFloor = 69;
      case 69: {
        if (tag == 552) {
         parse_OptionMktOrdMaxFloor:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optionmktordmaxfloor_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(561)) goto parse_OptionTickSize;
        break;
      }

      // optional double OptionTickSize = 70;
      case 70: {
        if (tag == 561) {
         parse_OptionTickSize:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optionticksize_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(570)) goto parse_OptionSecurityStatusFlag;
        break;
      }

      // optional string OptionSecurityStatusFlag = 71;
      case 71: {
        if (tag == 570) {
         parse_OptionSecurityStatusFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionsecuritystatusflag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionsecuritystatusflag().data(), this->optionsecuritystatusflag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityStatusFlag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(642)) goto parse_FITradeProductType;
        break;
      }

      // optional string FITradeProductType = 80;
      case 80: {
        if (tag == 642) {
         parse_FITradeProductType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fitradeproducttype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fitradeproducttype().data(), this->fitradeproducttype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FITradeProductType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(650)) goto parse_FISecurityProperty;
        break;
      }

      // optional string FISecurityProperty = 81;
      case 81: {
        if (tag == 650) {
         parse_FISecurityProperty:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fisecurityproperty()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fisecurityproperty().data(), this->fisecurityproperty().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FISecurityProperty"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(658)) goto parse_FISecurityStatus;
        break;
      }

      // optional string FISecurityStatus = 82;
      case 82: {
        if (tag == 658) {
         parse_FISecurityStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fisecuritystatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fisecuritystatus().data(), this->fisecuritystatus().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FISecurityStatus"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(666)) goto parse_FIPledgedSecurityID;
        break;
      }

      // optional string FIPledgedSecurityID = 83;
      case 83: {
        if (tag == 666) {
         parse_FIPledgedSecurityID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fipledgedsecurityid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fipledgedsecurityid().data(), this->fipledgedsecurityid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FIPledgedSecurityID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(674)) goto parse_FIOpenTime;
        break;
      }

      // optional string FIOpenTime = 84;
      case 84: {
        if (tag == 674) {
         parse_FIOpenTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fiopentime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fiopentime().data(), this->fiopentime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FIOpenTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(682)) goto parse_FICloseTime;
        break;
      }

      // optional string FICloseTime = 85;
      case 85: {
        if (tag == 682) {
         parse_FICloseTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ficlosetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ficlosetime().data(), this->ficlosetime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FICloseTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(690)) goto parse_FIIssueMode;
        break;
      }

      // optional string FIIssueMode = 86;
      case 86: {
        if (tag == 690) {
         parse_FIIssueMode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fiissuemode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fiissuemode().data(), this->fiissuemode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(697)) goto parse_FIFaceAmount;
        break;
      }

      // optional double FIFaceAmount = 87;
      case 87: {
        if (tag == 697) {
         parse_FIFaceAmount:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fifaceamount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(705)) goto parse_FIIssuePrice;
        break;
      }

      // optional double FIIssuePrice = 88;
      case 88: {
        if (tag == 705) {
         parse_FIIssuePrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fiissueprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(714)) goto parse_FIInterestType;
        break;
      }

      // optional string FIInterestType = 89;
      case 89: {
        if (tag == 714) {
         parse_FIInterestType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fiinteresttype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fiinteresttype().data(), this->fiinteresttype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FIInterestType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(722)) goto parse_FIInterestFrequency;
        break;
      }

      // optional string FIInterestFrequency = 90;
      case 90: {
        if (tag == 722) {
         parse_FIInterestFrequency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fiinterestfrequency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fiinterestfrequency().data(), this->fiinterestfrequency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FIInterestFrequency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(729)) goto parse_FIGuaranteedInterestRate;
        break;
      }

      // optional double FIGuaranteedInterestRate = 91;
      case 91: {
        if (tag == 729) {
         parse_FIGuaranteedInterestRate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &figuaranteedinterestrate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(737)) goto parse_FIBaseInterestRate;
        break;
      }

      // optional double FIBaseInterestRate = 92;
      case 92: {
        if (tag == 737) {
         parse_FIBaseInterestRate:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fibaseinterestrate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(745)) goto parse_FIQuotedMargin;
        break;
      }

      // optional double FIQuotedMargin = 93;
      case 93: {
        if (tag == 745) {
         parse_FIQuotedMargin:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fiquotedmargin_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(752)) goto parse_FITimeLimit;
        break;
      }

      // optional int32 FITimeLimit = 94;
      case 94: {
        if (tag == 752) {
         parse_FITimeLimit:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fitimelimit_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(761)) goto parse_FITotalIssuance;
        break;
      }

      // optional double FITotalIssuance = 95;
      case 95: {
        if (tag == 761) {
         parse_FITotalIssuance:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fitotalissuance_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(770)) goto parse_FIIssueStartDate;
        break;
      }

      // optional string FIIssueStartDate = 96;
      case 96: {
        if (tag == 770) {
         parse_FIIssueStartDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fiissuestartdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fiissuestartdate().data(), this->fiissuestartdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueStartDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(778)) goto parse_FIIssueEndDate;
        break;
      }

      // optional string FIIssueEndDate = 97;
      case 97: {
        if (tag == 778) {
         parse_FIIssueEndDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fiissueenddate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fiissueenddate().data(), this->fiissueenddate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueEndDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(786)) goto parse_FIListDate;
        break;
      }

      // optional string FIListDate = 98;
      case 98: {
        if (tag == 786) {
         parse_FIListDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filistdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filistdate().data(), this->filistdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FIListDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(794)) goto parse_FIExpireDate;
        break;
      }

      // optional string FIExpireDate = 99;
      case 99: {
        if (tag == 794) {
         parse_FIExpireDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fiexpiredate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fiexpiredate().data(), this->fiexpiredate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FIExpireDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_FINationalDebtType;
        break;
      }

      // optional string FINationalDebtType = 100;
      case 100: {
        if (tag == 802) {
         parse_FINationalDebtType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_finationaldebttype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->finationaldebttype().data(), this->finationaldebttype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FINationalDebtType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_FIIssueMethod;
        break;
      }

      // optional string FIIssueMethod = 101;
      case 101: {
        if (tag == 810) {
         parse_FIIssueMethod:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fiissuemethod()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fiissuemethod().data(), this->fiissuemethod().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMethod"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(816)) goto parse_FICrossMarket;
        break;
      }

      // optional bool FICrossMarket = 102;
      case 102: {
        if (tag == 816) {
         parse_FICrossMarket:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ficrossmarket_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(824)) goto parse_FIShortSellFlag;
        break;
      }

      // optional bool FIShortSellFlag = 103;
      case 103: {
        if (tag == 824) {
         parse_FIShortSellFlag:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fishortsellflag_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(833)) goto parse_FITotalShortSellQuota;
        break;
      }

      // optional double FITotalShortSellQuota = 104;
      case 104: {
        if (tag == 833) {
         parse_FITotalShortSellQuota:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fitotalshortsellquota_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(841)) goto parse_FIDealerShortSellQuota;
        break;
      }

      // optional double FIDealerShortSellQuota = 105;
      case 105: {
        if (tag == 841) {
         parse_FIDealerShortSellQuota:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fidealershortsellquota_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(849)) goto parse_FIPreClosePx;
        break;
      }

      // optional double FIPreClosePx = 106;
      case 106: {
        if (tag == 849) {
         parse_FIPreClosePx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fipreclosepx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(857)) goto parse_FIPreWeightedPx;
        break;
      }

      // optional double FIPreWeightedPx = 107;
      case 107: {
        if (tag == 857) {
         parse_FIPreWeightedPx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fipreweightedpx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.MDBasicInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.MDBasicInfo)
  return false;
#undef DO_
}

void MDBasicInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.MDBasicInfo)
  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), this->htscsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.HTSCSecurityID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->htscsecurityid(), output);
  }

  // optional string SecurityID = 2;
  if (this->securityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->securityid().data(), this->securityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.SecurityID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->securityid(), output);
  }

  // optional string Symbol = 3;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.Symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->symbol(), output);
  }

  // optional string ChiSpelling = 4;
  if (this->chispelling().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chispelling().data(), this->chispelling().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.ChiSpelling");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->chispelling(), output);
  }

  // optional string EnglishName = 5;
  if (this->englishname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->englishname().data(), this->englishname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.EnglishName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->englishname(), output);
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->securityidsource(), output);
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->securitytype(), output);
  }

  // optional string SecuritySubType = 8;
  if (this->securitysubtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->securitysubtype().data(), this->securitysubtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.SecuritySubType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->securitysubtype(), output);
  }

  // optional string ListDate = 9;
  if (this->listdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listdate().data(), this->listdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.ListDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->listdate(), output);
  }

  // optional string Currency = 10;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.Currency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->currency(), output);
  }

  // optional int64 OutstandingShare = 11;
  if (this->outstandingshare() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->outstandingshare(), output);
  }

  // optional int64 PublicFloatShareQuantity = 12;
  if (this->publicfloatsharequantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->publicfloatsharequantity(), output);
  }

  // optional int32 MDDate = 13;
  if (this->mddate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->mddate(), output);
  }

  // optional string TradingPhaseCode = 14;
  if (this->tradingphasecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingphasecode().data(), this->tradingphasecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.TradingPhaseCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->tradingphasecode(), output);
  }

  // optional int64 PreClosePx = 15;
  if (this->preclosepx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->preclosepx(), output);
  }

  // optional int64 MaxPx = 16;
  if (this->maxpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->maxpx(), output);
  }

  // optional int64 MinPx = 17;
  if (this->minpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->minpx(), output);
  }

  // optional int64 LotSize = 18;
  if (this->lotsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->lotsize(), output);
  }

  // optional bool ShortSellFlag = 19;
  if (this->shortsellflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->shortsellflag(), output);
  }

  // optional string ExchangeDate = 20;
  if (this->exchangedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangedate().data(), this->exchangedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.ExchangeDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->exchangedate(), output);
  }

  // optional string ExchangeSymbol = 21;
  if (this->exchangesymbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangesymbol().data(), this->exchangesymbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.ExchangeSymbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->exchangesymbol(), output);
  }

  // optional double TickSize = 22;
  if (this->ticksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->ticksize(), output);
  }

  // optional int32 LoanMarginIndicator = 23;
  if (this->loanmarginindicator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->loanmarginindicator(), output);
  }

  // optional int32 PxAccuracy = 24;
  if (this->pxaccuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->pxaccuracy(), output);
  }

  // optional int32 IPOProfitable = 25;
  if (this->ipoprofitable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->ipoprofitable(), output);
  }

  // optional int32 DiffRightsIndicator = 26;
  if (this->diffrightsindicator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->diffrightsindicator(), output);
  }

  // optional string OptionContractID = 40;
  if (this->optioncontractid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optioncontractid().data(), this->optioncontractid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionContractID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      40, this->optioncontractid(), output);
  }

  // optional string OptionContractSymbol = 41;
  if (this->optioncontractsymbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optioncontractsymbol().data(), this->optioncontractsymbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionContractSymbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      41, this->optioncontractsymbol(), output);
  }

  // optional string OptionUnderlyingSecurityID = 42;
  if (this->optionunderlyingsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionunderlyingsecurityid().data(), this->optionunderlyingsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSecurityID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      42, this->optionunderlyingsecurityid(), output);
  }

  // optional string OptionUnderlyingSymbol = 43;
  if (this->optionunderlyingsymbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionunderlyingsymbol().data(), this->optionunderlyingsymbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSymbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      43, this->optionunderlyingsymbol(), output);
  }

  // optional string OptionUnderlyingType = 44;
  if (this->optionunderlyingtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionunderlyingtype().data(), this->optionunderlyingtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      44, this->optionunderlyingtype(), output);
  }

  // optional string OptionOptionType = 45;
  if (this->optionoptiontype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionoptiontype().data(), this->optionoptiontype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionOptionType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      45, this->optionoptiontype(), output);
  }

  // optional string OptionCallOrPut = 46;
  if (this->optioncallorput().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optioncallorput().data(), this->optioncallorput().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionCallOrPut");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      46, this->optioncallorput(), output);
  }

  // optional int64 OptionContractMultiplierUnit = 47;
  if (this->optioncontractmultiplierunit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(47, this->optioncontractmultiplierunit(), output);
  }

  // optional double OptionExercisePrice = 48;
  if (this->optionexerciseprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(48, this->optionexerciseprice(), output);
  }

  // optional string OptionStartDate = 49;
  if (this->optionstartdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionstartdate().data(), this->optionstartdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionStartDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      49, this->optionstartdate(), output);
  }

  // optional string OptionEndDate = 50;
  if (this->optionenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionenddate().data(), this->optionenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionEndDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      50, this->optionenddate(), output);
  }

  // optional string OptionExerciseDate = 51;
  if (this->optionexercisedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionexercisedate().data(), this->optionexercisedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionExerciseDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      51, this->optionexercisedate(), output);
  }

  // optional string OptionDeliveryDate = 52;
  if (this->optiondeliverydate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optiondeliverydate().data(), this->optiondeliverydate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionDeliveryDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      52, this->optiondeliverydate(), output);
  }

  // optional string OptionExpireDate = 53;
  if (this->optionexpiredate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionexpiredate().data(), this->optionexpiredate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionExpireDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      53, this->optionexpiredate(), output);
  }

  // optional string OptionUpdateVersion = 54;
  if (this->optionupdateversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionupdateversion().data(), this->optionupdateversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionUpdateVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      54, this->optionupdateversion(), output);
  }

  // optional int64 OptionTotalLongPosition = 55;
  if (this->optiontotallongposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(55, this->optiontotallongposition(), output);
  }

  // optional double OptionSecurityClosePx = 56;
  if (this->optionsecurityclosepx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(56, this->optionsecurityclosepx(), output);
  }

  // optional double OptionSettlPrice = 57;
  if (this->optionsettlprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(57, this->optionsettlprice(), output);
  }

  // optional double OptionUnderlyingClosePx = 58;
  if (this->optionunderlyingclosepx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(58, this->optionunderlyingclosepx(), output);
  }

  // optional string OptionPriceLimitType = 59;
  if (this->optionpricelimittype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionpricelimittype().data(), this->optionpricelimittype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionPriceLimitType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      59, this->optionpricelimittype(), output);
  }

  // optional double OptionDailyPriceUpLimit = 60;
  if (this->optiondailypriceuplimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(60, this->optiondailypriceuplimit(), output);
  }

  // optional double OptionDailyPriceDownLimit = 61;
  if (this->optiondailypricedownlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(61, this->optiondailypricedownlimit(), output);
  }

  // optional double OptionMarginUnit = 62;
  if (this->optionmarginunit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(62, this->optionmarginunit(), output);
  }

  // optional double OptionMarginRatioParam1 = 63;
  if (this->optionmarginratioparam1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(63, this->optionmarginratioparam1(), output);
  }

  // optional double OptionMarginRatioParam2 = 64;
  if (this->optionmarginratioparam2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(64, this->optionmarginratioparam2(), output);
  }

  // optional int64 OptionRoundLot = 65;
  if (this->optionroundlot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(65, this->optionroundlot(), output);
  }

  // optional int64 OptionLmtOrdMinFloor = 66;
  if (this->optionlmtordminfloor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(66, this->optionlmtordminfloor(), output);
  }

  // optional int64 OptionLmtOrdMaxFloor = 67;
  if (this->optionlmtordmaxfloor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(67, this->optionlmtordmaxfloor(), output);
  }

  // optional int64 OptionMktOrdMinFloor = 68;
  if (this->optionmktordminfloor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(68, this->optionmktordminfloor(), output);
  }

  // optional int64 OptionMktOrdMaxFloor = 69;
  if (this->optionmktordmaxfloor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(69, this->optionmktordmaxfloor(), output);
  }

  // optional double OptionTickSize = 70;
  if (this->optionticksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(70, this->optionticksize(), output);
  }

  // optional string OptionSecurityStatusFlag = 71;
  if (this->optionsecuritystatusflag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionsecuritystatusflag().data(), this->optionsecuritystatusflag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityStatusFlag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      71, this->optionsecuritystatusflag(), output);
  }

  // optional string FITradeProductType = 80;
  if (this->fitradeproducttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fitradeproducttype().data(), this->fitradeproducttype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FITradeProductType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      80, this->fitradeproducttype(), output);
  }

  // optional string FISecurityProperty = 81;
  if (this->fisecurityproperty().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fisecurityproperty().data(), this->fisecurityproperty().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FISecurityProperty");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      81, this->fisecurityproperty(), output);
  }

  // optional string FISecurityStatus = 82;
  if (this->fisecuritystatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fisecuritystatus().data(), this->fisecuritystatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FISecurityStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      82, this->fisecuritystatus(), output);
  }

  // optional string FIPledgedSecurityID = 83;
  if (this->fipledgedsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fipledgedsecurityid().data(), this->fipledgedsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIPledgedSecurityID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      83, this->fipledgedsecurityid(), output);
  }

  // optional string FIOpenTime = 84;
  if (this->fiopentime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiopentime().data(), this->fiopentime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIOpenTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      84, this->fiopentime(), output);
  }

  // optional string FICloseTime = 85;
  if (this->ficlosetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ficlosetime().data(), this->ficlosetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FICloseTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      85, this->ficlosetime(), output);
  }

  // optional string FIIssueMode = 86;
  if (this->fiissuemode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiissuemode().data(), this->fiissuemode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      86, this->fiissuemode(), output);
  }

  // optional double FIFaceAmount = 87;
  if (this->fifaceamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(87, this->fifaceamount(), output);
  }

  // optional double FIIssuePrice = 88;
  if (this->fiissueprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(88, this->fiissueprice(), output);
  }

  // optional string FIInterestType = 89;
  if (this->fiinteresttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiinteresttype().data(), this->fiinteresttype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIInterestType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      89, this->fiinteresttype(), output);
  }

  // optional string FIInterestFrequency = 90;
  if (this->fiinterestfrequency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiinterestfrequency().data(), this->fiinterestfrequency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIInterestFrequency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      90, this->fiinterestfrequency(), output);
  }

  // optional double FIGuaranteedInterestRate = 91;
  if (this->figuaranteedinterestrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(91, this->figuaranteedinterestrate(), output);
  }

  // optional double FIBaseInterestRate = 92;
  if (this->fibaseinterestrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(92, this->fibaseinterestrate(), output);
  }

  // optional double FIQuotedMargin = 93;
  if (this->fiquotedmargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(93, this->fiquotedmargin(), output);
  }

  // optional int32 FITimeLimit = 94;
  if (this->fitimelimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(94, this->fitimelimit(), output);
  }

  // optional double FITotalIssuance = 95;
  if (this->fitotalissuance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(95, this->fitotalissuance(), output);
  }

  // optional string FIIssueStartDate = 96;
  if (this->fiissuestartdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiissuestartdate().data(), this->fiissuestartdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueStartDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      96, this->fiissuestartdate(), output);
  }

  // optional string FIIssueEndDate = 97;
  if (this->fiissueenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiissueenddate().data(), this->fiissueenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueEndDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      97, this->fiissueenddate(), output);
  }

  // optional string FIListDate = 98;
  if (this->filistdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filistdate().data(), this->filistdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIListDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      98, this->filistdate(), output);
  }

  // optional string FIExpireDate = 99;
  if (this->fiexpiredate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiexpiredate().data(), this->fiexpiredate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIExpireDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      99, this->fiexpiredate(), output);
  }

  // optional string FINationalDebtType = 100;
  if (this->finationaldebttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->finationaldebttype().data(), this->finationaldebttype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FINationalDebtType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->finationaldebttype(), output);
  }

  // optional string FIIssueMethod = 101;
  if (this->fiissuemethod().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiissuemethod().data(), this->fiissuemethod().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMethod");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->fiissuemethod(), output);
  }

  // optional bool FICrossMarket = 102;
  if (this->ficrossmarket() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(102, this->ficrossmarket(), output);
  }

  // optional bool FIShortSellFlag = 103;
  if (this->fishortsellflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(103, this->fishortsellflag(), output);
  }

  // optional double FITotalShortSellQuota = 104;
  if (this->fitotalshortsellquota() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(104, this->fitotalshortsellquota(), output);
  }

  // optional double FIDealerShortSellQuota = 105;
  if (this->fidealershortsellquota() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(105, this->fidealershortsellquota(), output);
  }

  // optional double FIPreClosePx = 106;
  if (this->fipreclosepx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(106, this->fipreclosepx(), output);
  }

  // optional double FIPreWeightedPx = 107;
  if (this->fipreweightedpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(107, this->fipreweightedpx(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.MDBasicInfo)
}

::google::protobuf::uint8* MDBasicInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.MDBasicInfo)
  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), this->htscsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.HTSCSecurityID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->htscsecurityid(), target);
  }

  // optional string SecurityID = 2;
  if (this->securityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->securityid().data(), this->securityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.SecurityID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->securityid(), target);
  }

  // optional string Symbol = 3;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.Symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->symbol(), target);
  }

  // optional string ChiSpelling = 4;
  if (this->chispelling().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chispelling().data(), this->chispelling().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.ChiSpelling");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->chispelling(), target);
  }

  // optional string EnglishName = 5;
  if (this->englishname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->englishname().data(), this->englishname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.EnglishName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->englishname(), target);
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->securityidsource(), target);
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->securitytype(), target);
  }

  // optional string SecuritySubType = 8;
  if (this->securitysubtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->securitysubtype().data(), this->securitysubtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.SecuritySubType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->securitysubtype(), target);
  }

  // optional string ListDate = 9;
  if (this->listdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listdate().data(), this->listdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.ListDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->listdate(), target);
  }

  // optional string Currency = 10;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.Currency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->currency(), target);
  }

  // optional int64 OutstandingShare = 11;
  if (this->outstandingshare() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->outstandingshare(), target);
  }

  // optional int64 PublicFloatShareQuantity = 12;
  if (this->publicfloatsharequantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->publicfloatsharequantity(), target);
  }

  // optional int32 MDDate = 13;
  if (this->mddate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->mddate(), target);
  }

  // optional string TradingPhaseCode = 14;
  if (this->tradingphasecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingphasecode().data(), this->tradingphasecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.TradingPhaseCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->tradingphasecode(), target);
  }

  // optional int64 PreClosePx = 15;
  if (this->preclosepx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->preclosepx(), target);
  }

  // optional int64 MaxPx = 16;
  if (this->maxpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->maxpx(), target);
  }

  // optional int64 MinPx = 17;
  if (this->minpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->minpx(), target);
  }

  // optional int64 LotSize = 18;
  if (this->lotsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->lotsize(), target);
  }

  // optional bool ShortSellFlag = 19;
  if (this->shortsellflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->shortsellflag(), target);
  }

  // optional string ExchangeDate = 20;
  if (this->exchangedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangedate().data(), this->exchangedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.ExchangeDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->exchangedate(), target);
  }

  // optional string ExchangeSymbol = 21;
  if (this->exchangesymbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangesymbol().data(), this->exchangesymbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.ExchangeSymbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->exchangesymbol(), target);
  }

  // optional double TickSize = 22;
  if (this->ticksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->ticksize(), target);
  }

  // optional int32 LoanMarginIndicator = 23;
  if (this->loanmarginindicator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->loanmarginindicator(), target);
  }

  // optional int32 PxAccuracy = 24;
  if (this->pxaccuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->pxaccuracy(), target);
  }

  // optional int32 IPOProfitable = 25;
  if (this->ipoprofitable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->ipoprofitable(), target);
  }

  // optional int32 DiffRightsIndicator = 26;
  if (this->diffrightsindicator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->diffrightsindicator(), target);
  }

  // optional string OptionContractID = 40;
  if (this->optioncontractid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optioncontractid().data(), this->optioncontractid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionContractID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->optioncontractid(), target);
  }

  // optional string OptionContractSymbol = 41;
  if (this->optioncontractsymbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optioncontractsymbol().data(), this->optioncontractsymbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionContractSymbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->optioncontractsymbol(), target);
  }

  // optional string OptionUnderlyingSecurityID = 42;
  if (this->optionunderlyingsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionunderlyingsecurityid().data(), this->optionunderlyingsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSecurityID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        42, this->optionunderlyingsecurityid(), target);
  }

  // optional string OptionUnderlyingSymbol = 43;
  if (this->optionunderlyingsymbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionunderlyingsymbol().data(), this->optionunderlyingsymbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSymbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        43, this->optionunderlyingsymbol(), target);
  }

  // optional string OptionUnderlyingType = 44;
  if (this->optionunderlyingtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionunderlyingtype().data(), this->optionunderlyingtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        44, this->optionunderlyingtype(), target);
  }

  // optional string OptionOptionType = 45;
  if (this->optionoptiontype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionoptiontype().data(), this->optionoptiontype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionOptionType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        45, this->optionoptiontype(), target);
  }

  // optional string OptionCallOrPut = 46;
  if (this->optioncallorput().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optioncallorput().data(), this->optioncallorput().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionCallOrPut");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        46, this->optioncallorput(), target);
  }

  // optional int64 OptionContractMultiplierUnit = 47;
  if (this->optioncontractmultiplierunit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(47, this->optioncontractmultiplierunit(), target);
  }

  // optional double OptionExercisePrice = 48;
  if (this->optionexerciseprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(48, this->optionexerciseprice(), target);
  }

  // optional string OptionStartDate = 49;
  if (this->optionstartdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionstartdate().data(), this->optionstartdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionStartDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        49, this->optionstartdate(), target);
  }

  // optional string OptionEndDate = 50;
  if (this->optionenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionenddate().data(), this->optionenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionEndDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        50, this->optionenddate(), target);
  }

  // optional string OptionExerciseDate = 51;
  if (this->optionexercisedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionexercisedate().data(), this->optionexercisedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionExerciseDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        51, this->optionexercisedate(), target);
  }

  // optional string OptionDeliveryDate = 52;
  if (this->optiondeliverydate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optiondeliverydate().data(), this->optiondeliverydate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionDeliveryDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        52, this->optiondeliverydate(), target);
  }

  // optional string OptionExpireDate = 53;
  if (this->optionexpiredate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionexpiredate().data(), this->optionexpiredate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionExpireDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        53, this->optionexpiredate(), target);
  }

  // optional string OptionUpdateVersion = 54;
  if (this->optionupdateversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionupdateversion().data(), this->optionupdateversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionUpdateVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        54, this->optionupdateversion(), target);
  }

  // optional int64 OptionTotalLongPosition = 55;
  if (this->optiontotallongposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(55, this->optiontotallongposition(), target);
  }

  // optional double OptionSecurityClosePx = 56;
  if (this->optionsecurityclosepx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(56, this->optionsecurityclosepx(), target);
  }

  // optional double OptionSettlPrice = 57;
  if (this->optionsettlprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(57, this->optionsettlprice(), target);
  }

  // optional double OptionUnderlyingClosePx = 58;
  if (this->optionunderlyingclosepx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(58, this->optionunderlyingclosepx(), target);
  }

  // optional string OptionPriceLimitType = 59;
  if (this->optionpricelimittype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionpricelimittype().data(), this->optionpricelimittype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionPriceLimitType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        59, this->optionpricelimittype(), target);
  }

  // optional double OptionDailyPriceUpLimit = 60;
  if (this->optiondailypriceuplimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(60, this->optiondailypriceuplimit(), target);
  }

  // optional double OptionDailyPriceDownLimit = 61;
  if (this->optiondailypricedownlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(61, this->optiondailypricedownlimit(), target);
  }

  // optional double OptionMarginUnit = 62;
  if (this->optionmarginunit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(62, this->optionmarginunit(), target);
  }

  // optional double OptionMarginRatioParam1 = 63;
  if (this->optionmarginratioparam1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(63, this->optionmarginratioparam1(), target);
  }

  // optional double OptionMarginRatioParam2 = 64;
  if (this->optionmarginratioparam2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(64, this->optionmarginratioparam2(), target);
  }

  // optional int64 OptionRoundLot = 65;
  if (this->optionroundlot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(65, this->optionroundlot(), target);
  }

  // optional int64 OptionLmtOrdMinFloor = 66;
  if (this->optionlmtordminfloor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(66, this->optionlmtordminfloor(), target);
  }

  // optional int64 OptionLmtOrdMaxFloor = 67;
  if (this->optionlmtordmaxfloor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(67, this->optionlmtordmaxfloor(), target);
  }

  // optional int64 OptionMktOrdMinFloor = 68;
  if (this->optionmktordminfloor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(68, this->optionmktordminfloor(), target);
  }

  // optional int64 OptionMktOrdMaxFloor = 69;
  if (this->optionmktordmaxfloor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(69, this->optionmktordmaxfloor(), target);
  }

  // optional double OptionTickSize = 70;
  if (this->optionticksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(70, this->optionticksize(), target);
  }

  // optional string OptionSecurityStatusFlag = 71;
  if (this->optionsecuritystatusflag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionsecuritystatusflag().data(), this->optionsecuritystatusflag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityStatusFlag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        71, this->optionsecuritystatusflag(), target);
  }

  // optional string FITradeProductType = 80;
  if (this->fitradeproducttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fitradeproducttype().data(), this->fitradeproducttype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FITradeProductType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        80, this->fitradeproducttype(), target);
  }

  // optional string FISecurityProperty = 81;
  if (this->fisecurityproperty().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fisecurityproperty().data(), this->fisecurityproperty().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FISecurityProperty");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        81, this->fisecurityproperty(), target);
  }

  // optional string FISecurityStatus = 82;
  if (this->fisecuritystatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fisecuritystatus().data(), this->fisecuritystatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FISecurityStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        82, this->fisecuritystatus(), target);
  }

  // optional string FIPledgedSecurityID = 83;
  if (this->fipledgedsecurityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fipledgedsecurityid().data(), this->fipledgedsecurityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIPledgedSecurityID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        83, this->fipledgedsecurityid(), target);
  }

  // optional string FIOpenTime = 84;
  if (this->fiopentime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiopentime().data(), this->fiopentime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIOpenTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        84, this->fiopentime(), target);
  }

  // optional string FICloseTime = 85;
  if (this->ficlosetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ficlosetime().data(), this->ficlosetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FICloseTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        85, this->ficlosetime(), target);
  }

  // optional string FIIssueMode = 86;
  if (this->fiissuemode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiissuemode().data(), this->fiissuemode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        86, this->fiissuemode(), target);
  }

  // optional double FIFaceAmount = 87;
  if (this->fifaceamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(87, this->fifaceamount(), target);
  }

  // optional double FIIssuePrice = 88;
  if (this->fiissueprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(88, this->fiissueprice(), target);
  }

  // optional string FIInterestType = 89;
  if (this->fiinteresttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiinteresttype().data(), this->fiinteresttype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIInterestType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        89, this->fiinteresttype(), target);
  }

  // optional string FIInterestFrequency = 90;
  if (this->fiinterestfrequency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiinterestfrequency().data(), this->fiinterestfrequency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIInterestFrequency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        90, this->fiinterestfrequency(), target);
  }

  // optional double FIGuaranteedInterestRate = 91;
  if (this->figuaranteedinterestrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(91, this->figuaranteedinterestrate(), target);
  }

  // optional double FIBaseInterestRate = 92;
  if (this->fibaseinterestrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(92, this->fibaseinterestrate(), target);
  }

  // optional double FIQuotedMargin = 93;
  if (this->fiquotedmargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(93, this->fiquotedmargin(), target);
  }

  // optional int32 FITimeLimit = 94;
  if (this->fitimelimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(94, this->fitimelimit(), target);
  }

  // optional double FITotalIssuance = 95;
  if (this->fitotalissuance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(95, this->fitotalissuance(), target);
  }

  // optional string FIIssueStartDate = 96;
  if (this->fiissuestartdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiissuestartdate().data(), this->fiissuestartdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueStartDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        96, this->fiissuestartdate(), target);
  }

  // optional string FIIssueEndDate = 97;
  if (this->fiissueenddate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiissueenddate().data(), this->fiissueenddate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueEndDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        97, this->fiissueenddate(), target);
  }

  // optional string FIListDate = 98;
  if (this->filistdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filistdate().data(), this->filistdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIListDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        98, this->filistdate(), target);
  }

  // optional string FIExpireDate = 99;
  if (this->fiexpiredate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiexpiredate().data(), this->fiexpiredate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIExpireDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        99, this->fiexpiredate(), target);
  }

  // optional string FINationalDebtType = 100;
  if (this->finationaldebttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->finationaldebttype().data(), this->finationaldebttype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FINationalDebtType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->finationaldebttype(), target);
  }

  // optional string FIIssueMethod = 101;
  if (this->fiissuemethod().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fiissuemethod().data(), this->fiissuemethod().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMethod");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->fiissuemethod(), target);
  }

  // optional bool FICrossMarket = 102;
  if (this->ficrossmarket() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(102, this->ficrossmarket(), target);
  }

  // optional bool FIShortSellFlag = 103;
  if (this->fishortsellflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(103, this->fishortsellflag(), target);
  }

  // optional double FITotalShortSellQuota = 104;
  if (this->fitotalshortsellquota() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(104, this->fitotalshortsellquota(), target);
  }

  // optional double FIDealerShortSellQuota = 105;
  if (this->fidealershortsellquota() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(105, this->fidealershortsellquota(), target);
  }

  // optional double FIPreClosePx = 106;
  if (this->fipreclosepx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(106, this->fipreclosepx(), target);
  }

  // optional double FIPreWeightedPx = 107;
  if (this->fipreweightedpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(107, this->fipreweightedpx(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.MDBasicInfo)
  return target;
}

size_t MDBasicInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.MDBasicInfo)
  size_t total_size = 0;

  // optional string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->htscsecurityid());
  }

  // optional string SecurityID = 2;
  if (this->securityid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->securityid());
  }

  // optional string Symbol = 3;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // optional string ChiSpelling = 4;
  if (this->chispelling().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chispelling());
  }

  // optional string EnglishName = 5;
  if (this->englishname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->englishname());
  }

  // optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->securityidsource());
  }

  // optional .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->securitytype());
  }

  // optional string SecuritySubType = 8;
  if (this->securitysubtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->securitysubtype());
  }

  // optional string ListDate = 9;
  if (this->listdate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listdate());
  }

  // optional string Currency = 10;
  if (this->currency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency());
  }

  // optional int64 OutstandingShare = 11;
  if (this->outstandingshare() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->outstandingshare());
  }

  // optional int64 PublicFloatShareQuantity = 12;
  if (this->publicfloatsharequantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->publicfloatsharequantity());
  }

  // optional int32 MDDate = 13;
  if (this->mddate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mddate());
  }

  // optional string TradingPhaseCode = 14;
  if (this->tradingphasecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradingphasecode());
  }

  // optional int64 PreClosePx = 15;
  if (this->preclosepx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->preclosepx());
  }

  // optional int64 MaxPx = 16;
  if (this->maxpx() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maxpx());
  }

  // optional int64 MinPx = 17;
  if (this->minpx() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->minpx());
  }

  // optional int64 LotSize = 18;
  if (this->lotsize() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lotsize());
  }

  // optional bool ShortSellFlag = 19;
  if (this->shortsellflag() != 0) {
    total_size += 2 + 1;
  }

  // optional string ExchangeDate = 20;
  if (this->exchangedate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchangedate());
  }

  // optional string ExchangeSymbol = 21;
  if (this->exchangesymbol().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchangesymbol());
  }

  // optional double TickSize = 22;
  if (this->ticksize() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 LoanMarginIndicator = 23;
  if (this->loanmarginindicator() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loanmarginindicator());
  }

  // optional int32 PxAccuracy = 24;
  if (this->pxaccuracy() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pxaccuracy());
  }

  // optional int32 IPOProfitable = 25;
  if (this->ipoprofitable() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ipoprofitable());
  }

  // optional int32 DiffRightsIndicator = 26;
  if (this->diffrightsindicator() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->diffrightsindicator());
  }

  // optional string OptionContractID = 40;
  if (this->optioncontractid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optioncontractid());
  }

  // optional string OptionContractSymbol = 41;
  if (this->optioncontractsymbol().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optioncontractsymbol());
  }

  // optional string OptionUnderlyingSecurityID = 42;
  if (this->optionunderlyingsecurityid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionunderlyingsecurityid());
  }

  // optional string OptionUnderlyingSymbol = 43;
  if (this->optionunderlyingsymbol().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionunderlyingsymbol());
  }

  // optional string OptionUnderlyingType = 44;
  if (this->optionunderlyingtype().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionunderlyingtype());
  }

  // optional string OptionOptionType = 45;
  if (this->optionoptiontype().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionoptiontype());
  }

  // optional string OptionCallOrPut = 46;
  if (this->optioncallorput().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optioncallorput());
  }

  // optional int64 OptionContractMultiplierUnit = 47;
  if (this->optioncontractmultiplierunit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->optioncontractmultiplierunit());
  }

  // optional double OptionExercisePrice = 48;
  if (this->optionexerciseprice() != 0) {
    total_size += 2 + 8;
  }

  // optional string OptionStartDate = 49;
  if (this->optionstartdate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionstartdate());
  }

  // optional string OptionEndDate = 50;
  if (this->optionenddate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionenddate());
  }

  // optional string OptionExerciseDate = 51;
  if (this->optionexercisedate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionexercisedate());
  }

  // optional string OptionDeliveryDate = 52;
  if (this->optiondeliverydate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optiondeliverydate());
  }

  // optional string OptionExpireDate = 53;
  if (this->optionexpiredate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionexpiredate());
  }

  // optional string OptionUpdateVersion = 54;
  if (this->optionupdateversion().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionupdateversion());
  }

  // optional int64 OptionTotalLongPosition = 55;
  if (this->optiontotallongposition() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->optiontotallongposition());
  }

  // optional double OptionSecurityClosePx = 56;
  if (this->optionsecurityclosepx() != 0) {
    total_size += 2 + 8;
  }

  // optional double OptionSettlPrice = 57;
  if (this->optionsettlprice() != 0) {
    total_size += 2 + 8;
  }

  // optional double OptionUnderlyingClosePx = 58;
  if (this->optionunderlyingclosepx() != 0) {
    total_size += 2 + 8;
  }

  // optional string OptionPriceLimitType = 59;
  if (this->optionpricelimittype().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionpricelimittype());
  }

  // optional double OptionDailyPriceUpLimit = 60;
  if (this->optiondailypriceuplimit() != 0) {
    total_size += 2 + 8;
  }

  // optional double OptionDailyPriceDownLimit = 61;
  if (this->optiondailypricedownlimit() != 0) {
    total_size += 2 + 8;
  }

  // optional double OptionMarginUnit = 62;
  if (this->optionmarginunit() != 0) {
    total_size += 2 + 8;
  }

  // optional double OptionMarginRatioParam1 = 63;
  if (this->optionmarginratioparam1() != 0) {
    total_size += 2 + 8;
  }

  // optional double OptionMarginRatioParam2 = 64;
  if (this->optionmarginratioparam2() != 0) {
    total_size += 2 + 8;
  }

  // optional int64 OptionRoundLot = 65;
  if (this->optionroundlot() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->optionroundlot());
  }

  // optional int64 OptionLmtOrdMinFloor = 66;
  if (this->optionlmtordminfloor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->optionlmtordminfloor());
  }

  // optional int64 OptionLmtOrdMaxFloor = 67;
  if (this->optionlmtordmaxfloor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->optionlmtordmaxfloor());
  }

  // optional int64 OptionMktOrdMinFloor = 68;
  if (this->optionmktordminfloor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->optionmktordminfloor());
  }

  // optional int64 OptionMktOrdMaxFloor = 69;
  if (this->optionmktordmaxfloor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->optionmktordmaxfloor());
  }

  // optional double OptionTickSize = 70;
  if (this->optionticksize() != 0) {
    total_size += 2 + 8;
  }

  // optional string OptionSecurityStatusFlag = 71;
  if (this->optionsecuritystatusflag().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionsecuritystatusflag());
  }

  // optional string FITradeProductType = 80;
  if (this->fitradeproducttype().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fitradeproducttype());
  }

  // optional string FISecurityProperty = 81;
  if (this->fisecurityproperty().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fisecurityproperty());
  }

  // optional string FISecurityStatus = 82;
  if (this->fisecuritystatus().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fisecuritystatus());
  }

  // optional string FIPledgedSecurityID = 83;
  if (this->fipledgedsecurityid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fipledgedsecurityid());
  }

  // optional string FIOpenTime = 84;
  if (this->fiopentime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fiopentime());
  }

  // optional string FICloseTime = 85;
  if (this->ficlosetime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ficlosetime());
  }

  // optional string FIIssueMode = 86;
  if (this->fiissuemode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fiissuemode());
  }

  // optional double FIFaceAmount = 87;
  if (this->fifaceamount() != 0) {
    total_size += 2 + 8;
  }

  // optional double FIIssuePrice = 88;
  if (this->fiissueprice() != 0) {
    total_size += 2 + 8;
  }

  // optional string FIInterestType = 89;
  if (this->fiinteresttype().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fiinteresttype());
  }

  // optional string FIInterestFrequency = 90;
  if (this->fiinterestfrequency().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fiinterestfrequency());
  }

  // optional double FIGuaranteedInterestRate = 91;
  if (this->figuaranteedinterestrate() != 0) {
    total_size += 2 + 8;
  }

  // optional double FIBaseInterestRate = 92;
  if (this->fibaseinterestrate() != 0) {
    total_size += 2 + 8;
  }

  // optional double FIQuotedMargin = 93;
  if (this->fiquotedmargin() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 FITimeLimit = 94;
  if (this->fitimelimit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fitimelimit());
  }

  // optional double FITotalIssuance = 95;
  if (this->fitotalissuance() != 0) {
    total_size += 2 + 8;
  }

  // optional string FIIssueStartDate = 96;
  if (this->fiissuestartdate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fiissuestartdate());
  }

  // optional string FIIssueEndDate = 97;
  if (this->fiissueenddate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fiissueenddate());
  }

  // optional string FIListDate = 98;
  if (this->filistdate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filistdate());
  }

  // optional string FIExpireDate = 99;
  if (this->fiexpiredate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fiexpiredate());
  }

  // optional string FINationalDebtType = 100;
  if (this->finationaldebttype().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->finationaldebttype());
  }

  // optional string FIIssueMethod = 101;
  if (this->fiissuemethod().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fiissuemethod());
  }

  // optional bool FICrossMarket = 102;
  if (this->ficrossmarket() != 0) {
    total_size += 2 + 1;
  }

  // optional bool FIShortSellFlag = 103;
  if (this->fishortsellflag() != 0) {
    total_size += 2 + 1;
  }

  // optional double FITotalShortSellQuota = 104;
  if (this->fitotalshortsellquota() != 0) {
    total_size += 2 + 8;
  }

  // optional double FIDealerShortSellQuota = 105;
  if (this->fidealershortsellquota() != 0) {
    total_size += 2 + 8;
  }

  // optional double FIPreClosePx = 106;
  if (this->fipreclosepx() != 0) {
    total_size += 2 + 8;
  }

  // optional double FIPreWeightedPx = 107;
  if (this->fipreweightedpx() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MDBasicInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.MDBasicInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MDBasicInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MDBasicInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.MDBasicInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.MDBasicInfo)
    UnsafeMergeFrom(*source);
  }
}

void MDBasicInfo::MergeFrom(const MDBasicInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.MDBasicInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MDBasicInfo::UnsafeMergeFrom(const MDBasicInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.htscsecurityid().size() > 0) {

    htscsecurityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.htscsecurityid_);
  }
  if (from.securityid().size() > 0) {

    securityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.securityid_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.chispelling().size() > 0) {

    chispelling_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chispelling_);
  }
  if (from.englishname().size() > 0) {

    englishname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.englishname_);
  }
  if (from.securityidsource() != 0) {
    set_securityidsource(from.securityidsource());
  }
  if (from.securitytype() != 0) {
    set_securitytype(from.securitytype());
  }
  if (from.securitysubtype().size() > 0) {

    securitysubtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.securitysubtype_);
  }
  if (from.listdate().size() > 0) {

    listdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listdate_);
  }
  if (from.currency().size() > 0) {

    currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  if (from.outstandingshare() != 0) {
    set_outstandingshare(from.outstandingshare());
  }
  if (from.publicfloatsharequantity() != 0) {
    set_publicfloatsharequantity(from.publicfloatsharequantity());
  }
  if (from.mddate() != 0) {
    set_mddate(from.mddate());
  }
  if (from.tradingphasecode().size() > 0) {

    tradingphasecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingphasecode_);
  }
  if (from.preclosepx() != 0) {
    set_preclosepx(from.preclosepx());
  }
  if (from.maxpx() != 0) {
    set_maxpx(from.maxpx());
  }
  if (from.minpx() != 0) {
    set_minpx(from.minpx());
  }
  if (from.lotsize() != 0) {
    set_lotsize(from.lotsize());
  }
  if (from.shortsellflag() != 0) {
    set_shortsellflag(from.shortsellflag());
  }
  if (from.exchangedate().size() > 0) {

    exchangedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangedate_);
  }
  if (from.exchangesymbol().size() > 0) {

    exchangesymbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangesymbol_);
  }
  if (from.ticksize() != 0) {
    set_ticksize(from.ticksize());
  }
  if (from.loanmarginindicator() != 0) {
    set_loanmarginindicator(from.loanmarginindicator());
  }
  if (from.pxaccuracy() != 0) {
    set_pxaccuracy(from.pxaccuracy());
  }
  if (from.ipoprofitable() != 0) {
    set_ipoprofitable(from.ipoprofitable());
  }
  if (from.diffrightsindicator() != 0) {
    set_diffrightsindicator(from.diffrightsindicator());
  }
  if (from.optioncontractid().size() > 0) {

    optioncontractid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optioncontractid_);
  }
  if (from.optioncontractsymbol().size() > 0) {

    optioncontractsymbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optioncontractsymbol_);
  }
  if (from.optionunderlyingsecurityid().size() > 0) {

    optionunderlyingsecurityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionunderlyingsecurityid_);
  }
  if (from.optionunderlyingsymbol().size() > 0) {

    optionunderlyingsymbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionunderlyingsymbol_);
  }
  if (from.optionunderlyingtype().size() > 0) {

    optionunderlyingtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionunderlyingtype_);
  }
  if (from.optionoptiontype().size() > 0) {

    optionoptiontype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionoptiontype_);
  }
  if (from.optioncallorput().size() > 0) {

    optioncallorput_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optioncallorput_);
  }
  if (from.optioncontractmultiplierunit() != 0) {
    set_optioncontractmultiplierunit(from.optioncontractmultiplierunit());
  }
  if (from.optionexerciseprice() != 0) {
    set_optionexerciseprice(from.optionexerciseprice());
  }
  if (from.optionstartdate().size() > 0) {

    optionstartdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionstartdate_);
  }
  if (from.optionenddate().size() > 0) {

    optionenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionenddate_);
  }
  if (from.optionexercisedate().size() > 0) {

    optionexercisedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionexercisedate_);
  }
  if (from.optiondeliverydate().size() > 0) {

    optiondeliverydate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optiondeliverydate_);
  }
  if (from.optionexpiredate().size() > 0) {

    optionexpiredate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionexpiredate_);
  }
  if (from.optionupdateversion().size() > 0) {

    optionupdateversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionupdateversion_);
  }
  if (from.optiontotallongposition() != 0) {
    set_optiontotallongposition(from.optiontotallongposition());
  }
  if (from.optionsecurityclosepx() != 0) {
    set_optionsecurityclosepx(from.optionsecurityclosepx());
  }
  if (from.optionsettlprice() != 0) {
    set_optionsettlprice(from.optionsettlprice());
  }
  if (from.optionunderlyingclosepx() != 0) {
    set_optionunderlyingclosepx(from.optionunderlyingclosepx());
  }
  if (from.optionpricelimittype().size() > 0) {

    optionpricelimittype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionpricelimittype_);
  }
  if (from.optiondailypriceuplimit() != 0) {
    set_optiondailypriceuplimit(from.optiondailypriceuplimit());
  }
  if (from.optiondailypricedownlimit() != 0) {
    set_optiondailypricedownlimit(from.optiondailypricedownlimit());
  }
  if (from.optionmarginunit() != 0) {
    set_optionmarginunit(from.optionmarginunit());
  }
  if (from.optionmarginratioparam1() != 0) {
    set_optionmarginratioparam1(from.optionmarginratioparam1());
  }
  if (from.optionmarginratioparam2() != 0) {
    set_optionmarginratioparam2(from.optionmarginratioparam2());
  }
  if (from.optionroundlot() != 0) {
    set_optionroundlot(from.optionroundlot());
  }
  if (from.optionlmtordminfloor() != 0) {
    set_optionlmtordminfloor(from.optionlmtordminfloor());
  }
  if (from.optionlmtordmaxfloor() != 0) {
    set_optionlmtordmaxfloor(from.optionlmtordmaxfloor());
  }
  if (from.optionmktordminfloor() != 0) {
    set_optionmktordminfloor(from.optionmktordminfloor());
  }
  if (from.optionmktordmaxfloor() != 0) {
    set_optionmktordmaxfloor(from.optionmktordmaxfloor());
  }
  if (from.optionticksize() != 0) {
    set_optionticksize(from.optionticksize());
  }
  if (from.optionsecuritystatusflag().size() > 0) {

    optionsecuritystatusflag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionsecuritystatusflag_);
  }
  if (from.fitradeproducttype().size() > 0) {

    fitradeproducttype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fitradeproducttype_);
  }
  if (from.fisecurityproperty().size() > 0) {

    fisecurityproperty_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fisecurityproperty_);
  }
  if (from.fisecuritystatus().size() > 0) {

    fisecuritystatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fisecuritystatus_);
  }
  if (from.fipledgedsecurityid().size() > 0) {

    fipledgedsecurityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fipledgedsecurityid_);
  }
  if (from.fiopentime().size() > 0) {

    fiopentime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fiopentime_);
  }
  if (from.ficlosetime().size() > 0) {

    ficlosetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ficlosetime_);
  }
  if (from.fiissuemode().size() > 0) {

    fiissuemode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fiissuemode_);
  }
  if (from.fifaceamount() != 0) {
    set_fifaceamount(from.fifaceamount());
  }
  if (from.fiissueprice() != 0) {
    set_fiissueprice(from.fiissueprice());
  }
  if (from.fiinteresttype().size() > 0) {

    fiinteresttype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fiinteresttype_);
  }
  if (from.fiinterestfrequency().size() > 0) {

    fiinterestfrequency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fiinterestfrequency_);
  }
  if (from.figuaranteedinterestrate() != 0) {
    set_figuaranteedinterestrate(from.figuaranteedinterestrate());
  }
  if (from.fibaseinterestrate() != 0) {
    set_fibaseinterestrate(from.fibaseinterestrate());
  }
  if (from.fiquotedmargin() != 0) {
    set_fiquotedmargin(from.fiquotedmargin());
  }
  if (from.fitimelimit() != 0) {
    set_fitimelimit(from.fitimelimit());
  }
  if (from.fitotalissuance() != 0) {
    set_fitotalissuance(from.fitotalissuance());
  }
  if (from.fiissuestartdate().size() > 0) {

    fiissuestartdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fiissuestartdate_);
  }
  if (from.fiissueenddate().size() > 0) {

    fiissueenddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fiissueenddate_);
  }
  if (from.filistdate().size() > 0) {

    filistdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filistdate_);
  }
  if (from.fiexpiredate().size() > 0) {

    fiexpiredate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fiexpiredate_);
  }
  if (from.finationaldebttype().size() > 0) {

    finationaldebttype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.finationaldebttype_);
  }
  if (from.fiissuemethod().size() > 0) {

    fiissuemethod_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fiissuemethod_);
  }
  if (from.ficrossmarket() != 0) {
    set_ficrossmarket(from.ficrossmarket());
  }
  if (from.fishortsellflag() != 0) {
    set_fishortsellflag(from.fishortsellflag());
  }
  if (from.fitotalshortsellquota() != 0) {
    set_fitotalshortsellquota(from.fitotalshortsellquota());
  }
  if (from.fidealershortsellquota() != 0) {
    set_fidealershortsellquota(from.fidealershortsellquota());
  }
  if (from.fipreclosepx() != 0) {
    set_fipreclosepx(from.fipreclosepx());
  }
  if (from.fipreweightedpx() != 0) {
    set_fipreweightedpx(from.fipreweightedpx());
  }
}

void MDBasicInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.MDBasicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MDBasicInfo::CopyFrom(const MDBasicInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.MDBasicInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MDBasicInfo::IsInitialized() const {

  return true;
}

void MDBasicInfo::Swap(MDBasicInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MDBasicInfo::InternalSwap(MDBasicInfo* other) {
  htscsecurityid_.Swap(&other->htscsecurityid_);
  securityid_.Swap(&other->securityid_);
  symbol_.Swap(&other->symbol_);
  chispelling_.Swap(&other->chispelling_);
  englishname_.Swap(&other->englishname_);
  std::swap(securityidsource_, other->securityidsource_);
  std::swap(securitytype_, other->securitytype_);
  securitysubtype_.Swap(&other->securitysubtype_);
  listdate_.Swap(&other->listdate_);
  currency_.Swap(&other->currency_);
  std::swap(outstandingshare_, other->outstandingshare_);
  std::swap(publicfloatsharequantity_, other->publicfloatsharequantity_);
  std::swap(mddate_, other->mddate_);
  tradingphasecode_.Swap(&other->tradingphasecode_);
  std::swap(preclosepx_, other->preclosepx_);
  std::swap(maxpx_, other->maxpx_);
  std::swap(minpx_, other->minpx_);
  std::swap(lotsize_, other->lotsize_);
  std::swap(shortsellflag_, other->shortsellflag_);
  exchangedate_.Swap(&other->exchangedate_);
  exchangesymbol_.Swap(&other->exchangesymbol_);
  std::swap(ticksize_, other->ticksize_);
  std::swap(loanmarginindicator_, other->loanmarginindicator_);
  std::swap(pxaccuracy_, other->pxaccuracy_);
  std::swap(ipoprofitable_, other->ipoprofitable_);
  std::swap(diffrightsindicator_, other->diffrightsindicator_);
  optioncontractid_.Swap(&other->optioncontractid_);
  optioncontractsymbol_.Swap(&other->optioncontractsymbol_);
  optionunderlyingsecurityid_.Swap(&other->optionunderlyingsecurityid_);
  optionunderlyingsymbol_.Swap(&other->optionunderlyingsymbol_);
  optionunderlyingtype_.Swap(&other->optionunderlyingtype_);
  optionoptiontype_.Swap(&other->optionoptiontype_);
  optioncallorput_.Swap(&other->optioncallorput_);
  std::swap(optioncontractmultiplierunit_, other->optioncontractmultiplierunit_);
  std::swap(optionexerciseprice_, other->optionexerciseprice_);
  optionstartdate_.Swap(&other->optionstartdate_);
  optionenddate_.Swap(&other->optionenddate_);
  optionexercisedate_.Swap(&other->optionexercisedate_);
  optiondeliverydate_.Swap(&other->optiondeliverydate_);
  optionexpiredate_.Swap(&other->optionexpiredate_);
  optionupdateversion_.Swap(&other->optionupdateversion_);
  std::swap(optiontotallongposition_, other->optiontotallongposition_);
  std::swap(optionsecurityclosepx_, other->optionsecurityclosepx_);
  std::swap(optionsettlprice_, other->optionsettlprice_);
  std::swap(optionunderlyingclosepx_, other->optionunderlyingclosepx_);
  optionpricelimittype_.Swap(&other->optionpricelimittype_);
  std::swap(optiondailypriceuplimit_, other->optiondailypriceuplimit_);
  std::swap(optiondailypricedownlimit_, other->optiondailypricedownlimit_);
  std::swap(optionmarginunit_, other->optionmarginunit_);
  std::swap(optionmarginratioparam1_, other->optionmarginratioparam1_);
  std::swap(optionmarginratioparam2_, other->optionmarginratioparam2_);
  std::swap(optionroundlot_, other->optionroundlot_);
  std::swap(optionlmtordminfloor_, other->optionlmtordminfloor_);
  std::swap(optionlmtordmaxfloor_, other->optionlmtordmaxfloor_);
  std::swap(optionmktordminfloor_, other->optionmktordminfloor_);
  std::swap(optionmktordmaxfloor_, other->optionmktordmaxfloor_);
  std::swap(optionticksize_, other->optionticksize_);
  optionsecuritystatusflag_.Swap(&other->optionsecuritystatusflag_);
  fitradeproducttype_.Swap(&other->fitradeproducttype_);
  fisecurityproperty_.Swap(&other->fisecurityproperty_);
  fisecuritystatus_.Swap(&other->fisecuritystatus_);
  fipledgedsecurityid_.Swap(&other->fipledgedsecurityid_);
  fiopentime_.Swap(&other->fiopentime_);
  ficlosetime_.Swap(&other->ficlosetime_);
  fiissuemode_.Swap(&other->fiissuemode_);
  std::swap(fifaceamount_, other->fifaceamount_);
  std::swap(fiissueprice_, other->fiissueprice_);
  fiinteresttype_.Swap(&other->fiinteresttype_);
  fiinterestfrequency_.Swap(&other->fiinterestfrequency_);
  std::swap(figuaranteedinterestrate_, other->figuaranteedinterestrate_);
  std::swap(fibaseinterestrate_, other->fibaseinterestrate_);
  std::swap(fiquotedmargin_, other->fiquotedmargin_);
  std::swap(fitimelimit_, other->fitimelimit_);
  std::swap(fitotalissuance_, other->fitotalissuance_);
  fiissuestartdate_.Swap(&other->fiissuestartdate_);
  fiissueenddate_.Swap(&other->fiissueenddate_);
  filistdate_.Swap(&other->filistdate_);
  fiexpiredate_.Swap(&other->fiexpiredate_);
  finationaldebttype_.Swap(&other->finationaldebttype_);
  fiissuemethod_.Swap(&other->fiissuemethod_);
  std::swap(ficrossmarket_, other->ficrossmarket_);
  std::swap(fishortsellflag_, other->fishortsellflag_);
  std::swap(fitotalshortsellquota_, other->fitotalshortsellquota_);
  std::swap(fidealershortsellquota_, other->fidealershortsellquota_);
  std::swap(fipreclosepx_, other->fipreclosepx_);
  std::swap(fipreweightedpx_, other->fipreweightedpx_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MDBasicInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MDBasicInfo_descriptor_;
  metadata.reflection = MDBasicInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MDBasicInfo

// optional string HTSCSecurityID = 1;
void MDBasicInfo::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.HTSCSecurityID)
  return htscsecurityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_htscsecurityid(const ::std::string& value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.HTSCSecurityID)
}
void MDBasicInfo::set_htscsecurityid(const char* value) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.HTSCSecurityID)
}
void MDBasicInfo::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.HTSCSecurityID)
}
::std::string* MDBasicInfo::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_htscsecurityid(::std::string* htscsecurityid) {
  if (htscsecurityid != NULL) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.HTSCSecurityID)
}

// optional string SecurityID = 2;
void MDBasicInfo::clear_securityid() {
  securityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::securityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.SecurityID)
  return securityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_securityid(const ::std::string& value) {
  
  securityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.SecurityID)
}
void MDBasicInfo::set_securityid(const char* value) {
  
  securityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.SecurityID)
}
void MDBasicInfo::set_securityid(const char* value, size_t size) {
  
  securityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.SecurityID)
}
::std::string* MDBasicInfo::mutable_securityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.SecurityID)
  return securityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_securityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.SecurityID)
  
  return securityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_securityid(::std::string* securityid) {
  if (securityid != NULL) {
    
  } else {
    
  }
  securityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), securityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.SecurityID)
}

// optional string Symbol = 3;
void MDBasicInfo::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::symbol() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.Symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.Symbol)
}
void MDBasicInfo::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.Symbol)
}
void MDBasicInfo::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.Symbol)
}
::std::string* MDBasicInfo::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.Symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_symbol() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.Symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.Symbol)
}

// optional string ChiSpelling = 4;
void MDBasicInfo::clear_chispelling() {
  chispelling_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::chispelling() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.ChiSpelling)
  return chispelling_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_chispelling(const ::std::string& value) {
  
  chispelling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.ChiSpelling)
}
void MDBasicInfo::set_chispelling(const char* value) {
  
  chispelling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.ChiSpelling)
}
void MDBasicInfo::set_chispelling(const char* value, size_t size) {
  
  chispelling_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.ChiSpelling)
}
::std::string* MDBasicInfo::mutable_chispelling() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.ChiSpelling)
  return chispelling_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_chispelling() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.ChiSpelling)
  
  return chispelling_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_chispelling(::std::string* chispelling) {
  if (chispelling != NULL) {
    
  } else {
    
  }
  chispelling_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chispelling);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.ChiSpelling)
}

// optional string EnglishName = 5;
void MDBasicInfo::clear_englishname() {
  englishname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::englishname() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.EnglishName)
  return englishname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_englishname(const ::std::string& value) {
  
  englishname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.EnglishName)
}
void MDBasicInfo::set_englishname(const char* value) {
  
  englishname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.EnglishName)
}
void MDBasicInfo::set_englishname(const char* value, size_t size) {
  
  englishname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.EnglishName)
}
::std::string* MDBasicInfo::mutable_englishname() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.EnglishName)
  return englishname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_englishname() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.EnglishName)
  
  return englishname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_englishname(::std::string* englishname) {
  if (englishname != NULL) {
    
  } else {
    
  }
  englishname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), englishname);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.EnglishName)
}

// optional .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
void MDBasicInfo::clear_securityidsource() {
  securityidsource_ = 0;
}
::com::htsc::mdc::model::ESecurityIDSource MDBasicInfo::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
void MDBasicInfo::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.securityIDSource)
}

// optional .com.htsc.mdc.model.ESecurityType securityType = 7;
void MDBasicInfo::clear_securitytype() {
  securitytype_ = 0;
}
::com::htsc::mdc::model::ESecurityType MDBasicInfo::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
void MDBasicInfo::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.securityType)
}

// optional string SecuritySubType = 8;
void MDBasicInfo::clear_securitysubtype() {
  securitysubtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::securitysubtype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.SecuritySubType)
  return securitysubtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_securitysubtype(const ::std::string& value) {
  
  securitysubtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.SecuritySubType)
}
void MDBasicInfo::set_securitysubtype(const char* value) {
  
  securitysubtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.SecuritySubType)
}
void MDBasicInfo::set_securitysubtype(const char* value, size_t size) {
  
  securitysubtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.SecuritySubType)
}
::std::string* MDBasicInfo::mutable_securitysubtype() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.SecuritySubType)
  return securitysubtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_securitysubtype() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.SecuritySubType)
  
  return securitysubtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_securitysubtype(::std::string* securitysubtype) {
  if (securitysubtype != NULL) {
    
  } else {
    
  }
  securitysubtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), securitysubtype);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.SecuritySubType)
}

// optional string ListDate = 9;
void MDBasicInfo::clear_listdate() {
  listdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::listdate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.ListDate)
  return listdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_listdate(const ::std::string& value) {
  
  listdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.ListDate)
}
void MDBasicInfo::set_listdate(const char* value) {
  
  listdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.ListDate)
}
void MDBasicInfo::set_listdate(const char* value, size_t size) {
  
  listdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.ListDate)
}
::std::string* MDBasicInfo::mutable_listdate() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.ListDate)
  return listdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_listdate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.ListDate)
  
  return listdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_listdate(::std::string* listdate) {
  if (listdate != NULL) {
    
  } else {
    
  }
  listdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listdate);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.ListDate)
}

// optional string Currency = 10;
void MDBasicInfo::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::currency() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.Currency)
  return currency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_currency(const ::std::string& value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.Currency)
}
void MDBasicInfo::set_currency(const char* value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.Currency)
}
void MDBasicInfo::set_currency(const char* value, size_t size) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.Currency)
}
::std::string* MDBasicInfo::mutable_currency() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.Currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_currency() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.Currency)
  
  return currency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_currency(::std::string* currency) {
  if (currency != NULL) {
    
  } else {
    
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.Currency)
}

// optional int64 OutstandingShare = 11;
void MDBasicInfo::clear_outstandingshare() {
  outstandingshare_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::outstandingshare() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OutstandingShare)
  return outstandingshare_;
}
void MDBasicInfo::set_outstandingshare(::google::protobuf::int64 value) {
  
  outstandingshare_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OutstandingShare)
}

// optional int64 PublicFloatShareQuantity = 12;
void MDBasicInfo::clear_publicfloatsharequantity() {
  publicfloatsharequantity_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::publicfloatsharequantity() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.PublicFloatShareQuantity)
  return publicfloatsharequantity_;
}
void MDBasicInfo::set_publicfloatsharequantity(::google::protobuf::int64 value) {
  
  publicfloatsharequantity_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.PublicFloatShareQuantity)
}

// optional int32 MDDate = 13;
void MDBasicInfo::clear_mddate() {
  mddate_ = 0;
}
::google::protobuf::int32 MDBasicInfo::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.MDDate)
  return mddate_;
}
void MDBasicInfo::set_mddate(::google::protobuf::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.MDDate)
}

// optional string TradingPhaseCode = 14;
void MDBasicInfo::clear_tradingphasecode() {
  tradingphasecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::tradingphasecode() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.TradingPhaseCode)
  return tradingphasecode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_tradingphasecode(const ::std::string& value) {
  
  tradingphasecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.TradingPhaseCode)
}
void MDBasicInfo::set_tradingphasecode(const char* value) {
  
  tradingphasecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.TradingPhaseCode)
}
void MDBasicInfo::set_tradingphasecode(const char* value, size_t size) {
  
  tradingphasecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.TradingPhaseCode)
}
::std::string* MDBasicInfo::mutable_tradingphasecode() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.TradingPhaseCode)
  return tradingphasecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_tradingphasecode() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.TradingPhaseCode)
  
  return tradingphasecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_tradingphasecode(::std::string* tradingphasecode) {
  if (tradingphasecode != NULL) {
    
  } else {
    
  }
  tradingphasecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradingphasecode);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.TradingPhaseCode)
}

// optional int64 PreClosePx = 15;
void MDBasicInfo::clear_preclosepx() {
  preclosepx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::preclosepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.PreClosePx)
  return preclosepx_;
}
void MDBasicInfo::set_preclosepx(::google::protobuf::int64 value) {
  
  preclosepx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.PreClosePx)
}

// optional int64 MaxPx = 16;
void MDBasicInfo::clear_maxpx() {
  maxpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::maxpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.MaxPx)
  return maxpx_;
}
void MDBasicInfo::set_maxpx(::google::protobuf::int64 value) {
  
  maxpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.MaxPx)
}

// optional int64 MinPx = 17;
void MDBasicInfo::clear_minpx() {
  minpx_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::minpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.MinPx)
  return minpx_;
}
void MDBasicInfo::set_minpx(::google::protobuf::int64 value) {
  
  minpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.MinPx)
}

// optional int64 LotSize = 18;
void MDBasicInfo::clear_lotsize() {
  lotsize_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::lotsize() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.LotSize)
  return lotsize_;
}
void MDBasicInfo::set_lotsize(::google::protobuf::int64 value) {
  
  lotsize_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.LotSize)
}

// optional bool ShortSellFlag = 19;
void MDBasicInfo::clear_shortsellflag() {
  shortsellflag_ = false;
}
bool MDBasicInfo::shortsellflag() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.ShortSellFlag)
  return shortsellflag_;
}
void MDBasicInfo::set_shortsellflag(bool value) {
  
  shortsellflag_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.ShortSellFlag)
}

// optional string ExchangeDate = 20;
void MDBasicInfo::clear_exchangedate() {
  exchangedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeDate)
  return exchangedate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_exchangedate(const ::std::string& value) {
  
  exchangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeDate)
}
void MDBasicInfo::set_exchangedate(const char* value) {
  
  exchangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeDate)
}
void MDBasicInfo::set_exchangedate(const char* value, size_t size) {
  
  exchangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeDate)
}
::std::string* MDBasicInfo::mutable_exchangedate() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeDate)
  return exchangedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_exchangedate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeDate)
  
  return exchangedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_exchangedate(::std::string* exchangedate) {
  if (exchangedate != NULL) {
    
  } else {
    
  }
  exchangedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchangedate);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeDate)
}

// optional string ExchangeSymbol = 21;
void MDBasicInfo::clear_exchangesymbol() {
  exchangesymbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::exchangesymbol() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeSymbol)
  return exchangesymbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_exchangesymbol(const ::std::string& value) {
  
  exchangesymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeSymbol)
}
void MDBasicInfo::set_exchangesymbol(const char* value) {
  
  exchangesymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeSymbol)
}
void MDBasicInfo::set_exchangesymbol(const char* value, size_t size) {
  
  exchangesymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeSymbol)
}
::std::string* MDBasicInfo::mutable_exchangesymbol() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeSymbol)
  return exchangesymbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_exchangesymbol() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeSymbol)
  
  return exchangesymbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_exchangesymbol(::std::string* exchangesymbol) {
  if (exchangesymbol != NULL) {
    
  } else {
    
  }
  exchangesymbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchangesymbol);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.ExchangeSymbol)
}

// optional double TickSize = 22;
void MDBasicInfo::clear_ticksize() {
  ticksize_ = 0;
}
double MDBasicInfo::ticksize() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.TickSize)
  return ticksize_;
}
void MDBasicInfo::set_ticksize(double value) {
  
  ticksize_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.TickSize)
}

// optional int32 LoanMarginIndicator = 23;
void MDBasicInfo::clear_loanmarginindicator() {
  loanmarginindicator_ = 0;
}
::google::protobuf::int32 MDBasicInfo::loanmarginindicator() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.LoanMarginIndicator)
  return loanmarginindicator_;
}
void MDBasicInfo::set_loanmarginindicator(::google::protobuf::int32 value) {
  
  loanmarginindicator_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.LoanMarginIndicator)
}

// optional int32 PxAccuracy = 24;
void MDBasicInfo::clear_pxaccuracy() {
  pxaccuracy_ = 0;
}
::google::protobuf::int32 MDBasicInfo::pxaccuracy() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.PxAccuracy)
  return pxaccuracy_;
}
void MDBasicInfo::set_pxaccuracy(::google::protobuf::int32 value) {
  
  pxaccuracy_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.PxAccuracy)
}

// optional int32 IPOProfitable = 25;
void MDBasicInfo::clear_ipoprofitable() {
  ipoprofitable_ = 0;
}
::google::protobuf::int32 MDBasicInfo::ipoprofitable() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.IPOProfitable)
  return ipoprofitable_;
}
void MDBasicInfo::set_ipoprofitable(::google::protobuf::int32 value) {
  
  ipoprofitable_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.IPOProfitable)
}

// optional int32 DiffRightsIndicator = 26;
void MDBasicInfo::clear_diffrightsindicator() {
  diffrightsindicator_ = 0;
}
::google::protobuf::int32 MDBasicInfo::diffrightsindicator() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.DiffRightsIndicator)
  return diffrightsindicator_;
}
void MDBasicInfo::set_diffrightsindicator(::google::protobuf::int32 value) {
  
  diffrightsindicator_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.DiffRightsIndicator)
}

// optional string OptionContractID = 40;
void MDBasicInfo::clear_optioncontractid() {
  optioncontractid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optioncontractid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractID)
  return optioncontractid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optioncontractid(const ::std::string& value) {
  
  optioncontractid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractID)
}
void MDBasicInfo::set_optioncontractid(const char* value) {
  
  optioncontractid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractID)
}
void MDBasicInfo::set_optioncontractid(const char* value, size_t size) {
  
  optioncontractid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractID)
}
::std::string* MDBasicInfo::mutable_optioncontractid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractID)
  return optioncontractid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optioncontractid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractID)
  
  return optioncontractid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optioncontractid(::std::string* optioncontractid) {
  if (optioncontractid != NULL) {
    
  } else {
    
  }
  optioncontractid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optioncontractid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractID)
}

// optional string OptionContractSymbol = 41;
void MDBasicInfo::clear_optioncontractsymbol() {
  optioncontractsymbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optioncontractsymbol() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractSymbol)
  return optioncontractsymbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optioncontractsymbol(const ::std::string& value) {
  
  optioncontractsymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractSymbol)
}
void MDBasicInfo::set_optioncontractsymbol(const char* value) {
  
  optioncontractsymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractSymbol)
}
void MDBasicInfo::set_optioncontractsymbol(const char* value, size_t size) {
  
  optioncontractsymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractSymbol)
}
::std::string* MDBasicInfo::mutable_optioncontractsymbol() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractSymbol)
  return optioncontractsymbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optioncontractsymbol() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractSymbol)
  
  return optioncontractsymbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optioncontractsymbol(::std::string* optioncontractsymbol) {
  if (optioncontractsymbol != NULL) {
    
  } else {
    
  }
  optioncontractsymbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optioncontractsymbol);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractSymbol)
}

// optional string OptionUnderlyingSecurityID = 42;
void MDBasicInfo::clear_optionunderlyingsecurityid() {
  optionunderlyingsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optionunderlyingsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSecurityID)
  return optionunderlyingsecurityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optionunderlyingsecurityid(const ::std::string& value) {
  
  optionunderlyingsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSecurityID)
}
void MDBasicInfo::set_optionunderlyingsecurityid(const char* value) {
  
  optionunderlyingsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSecurityID)
}
void MDBasicInfo::set_optionunderlyingsecurityid(const char* value, size_t size) {
  
  optionunderlyingsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSecurityID)
}
::std::string* MDBasicInfo::mutable_optionunderlyingsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSecurityID)
  return optionunderlyingsecurityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optionunderlyingsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSecurityID)
  
  return optionunderlyingsecurityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optionunderlyingsecurityid(::std::string* optionunderlyingsecurityid) {
  if (optionunderlyingsecurityid != NULL) {
    
  } else {
    
  }
  optionunderlyingsecurityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionunderlyingsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSecurityID)
}

// optional string OptionUnderlyingSymbol = 43;
void MDBasicInfo::clear_optionunderlyingsymbol() {
  optionunderlyingsymbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optionunderlyingsymbol() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSymbol)
  return optionunderlyingsymbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optionunderlyingsymbol(const ::std::string& value) {
  
  optionunderlyingsymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSymbol)
}
void MDBasicInfo::set_optionunderlyingsymbol(const char* value) {
  
  optionunderlyingsymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSymbol)
}
void MDBasicInfo::set_optionunderlyingsymbol(const char* value, size_t size) {
  
  optionunderlyingsymbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSymbol)
}
::std::string* MDBasicInfo::mutable_optionunderlyingsymbol() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSymbol)
  return optionunderlyingsymbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optionunderlyingsymbol() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSymbol)
  
  return optionunderlyingsymbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optionunderlyingsymbol(::std::string* optionunderlyingsymbol) {
  if (optionunderlyingsymbol != NULL) {
    
  } else {
    
  }
  optionunderlyingsymbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionunderlyingsymbol);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingSymbol)
}

// optional string OptionUnderlyingType = 44;
void MDBasicInfo::clear_optionunderlyingtype() {
  optionunderlyingtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optionunderlyingtype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingType)
  return optionunderlyingtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optionunderlyingtype(const ::std::string& value) {
  
  optionunderlyingtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingType)
}
void MDBasicInfo::set_optionunderlyingtype(const char* value) {
  
  optionunderlyingtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingType)
}
void MDBasicInfo::set_optionunderlyingtype(const char* value, size_t size) {
  
  optionunderlyingtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingType)
}
::std::string* MDBasicInfo::mutable_optionunderlyingtype() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingType)
  return optionunderlyingtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optionunderlyingtype() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingType)
  
  return optionunderlyingtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optionunderlyingtype(::std::string* optionunderlyingtype) {
  if (optionunderlyingtype != NULL) {
    
  } else {
    
  }
  optionunderlyingtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionunderlyingtype);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingType)
}

// optional string OptionOptionType = 45;
void MDBasicInfo::clear_optionoptiontype() {
  optionoptiontype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optionoptiontype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionOptionType)
  return optionoptiontype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optionoptiontype(const ::std::string& value) {
  
  optionoptiontype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionOptionType)
}
void MDBasicInfo::set_optionoptiontype(const char* value) {
  
  optionoptiontype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionOptionType)
}
void MDBasicInfo::set_optionoptiontype(const char* value, size_t size) {
  
  optionoptiontype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionOptionType)
}
::std::string* MDBasicInfo::mutable_optionoptiontype() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionOptionType)
  return optionoptiontype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optionoptiontype() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionOptionType)
  
  return optionoptiontype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optionoptiontype(::std::string* optionoptiontype) {
  if (optionoptiontype != NULL) {
    
  } else {
    
  }
  optionoptiontype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionoptiontype);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionOptionType)
}

// optional string OptionCallOrPut = 46;
void MDBasicInfo::clear_optioncallorput() {
  optioncallorput_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optioncallorput() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionCallOrPut)
  return optioncallorput_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optioncallorput(const ::std::string& value) {
  
  optioncallorput_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionCallOrPut)
}
void MDBasicInfo::set_optioncallorput(const char* value) {
  
  optioncallorput_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionCallOrPut)
}
void MDBasicInfo::set_optioncallorput(const char* value, size_t size) {
  
  optioncallorput_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionCallOrPut)
}
::std::string* MDBasicInfo::mutable_optioncallorput() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionCallOrPut)
  return optioncallorput_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optioncallorput() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionCallOrPut)
  
  return optioncallorput_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optioncallorput(::std::string* optioncallorput) {
  if (optioncallorput != NULL) {
    
  } else {
    
  }
  optioncallorput_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optioncallorput);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionCallOrPut)
}

// optional int64 OptionContractMultiplierUnit = 47;
void MDBasicInfo::clear_optioncontractmultiplierunit() {
  optioncontractmultiplierunit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::optioncontractmultiplierunit() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractMultiplierUnit)
  return optioncontractmultiplierunit_;
}
void MDBasicInfo::set_optioncontractmultiplierunit(::google::protobuf::int64 value) {
  
  optioncontractmultiplierunit_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionContractMultiplierUnit)
}

// optional double OptionExercisePrice = 48;
void MDBasicInfo::clear_optionexerciseprice() {
  optionexerciseprice_ = 0;
}
double MDBasicInfo::optionexerciseprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionExercisePrice)
  return optionexerciseprice_;
}
void MDBasicInfo::set_optionexerciseprice(double value) {
  
  optionexerciseprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionExercisePrice)
}

// optional string OptionStartDate = 49;
void MDBasicInfo::clear_optionstartdate() {
  optionstartdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optionstartdate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionStartDate)
  return optionstartdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optionstartdate(const ::std::string& value) {
  
  optionstartdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionStartDate)
}
void MDBasicInfo::set_optionstartdate(const char* value) {
  
  optionstartdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionStartDate)
}
void MDBasicInfo::set_optionstartdate(const char* value, size_t size) {
  
  optionstartdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionStartDate)
}
::std::string* MDBasicInfo::mutable_optionstartdate() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionStartDate)
  return optionstartdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optionstartdate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionStartDate)
  
  return optionstartdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optionstartdate(::std::string* optionstartdate) {
  if (optionstartdate != NULL) {
    
  } else {
    
  }
  optionstartdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionstartdate);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionStartDate)
}

// optional string OptionEndDate = 50;
void MDBasicInfo::clear_optionenddate() {
  optionenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optionenddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionEndDate)
  return optionenddate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optionenddate(const ::std::string& value) {
  
  optionenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionEndDate)
}
void MDBasicInfo::set_optionenddate(const char* value) {
  
  optionenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionEndDate)
}
void MDBasicInfo::set_optionenddate(const char* value, size_t size) {
  
  optionenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionEndDate)
}
::std::string* MDBasicInfo::mutable_optionenddate() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionEndDate)
  return optionenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optionenddate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionEndDate)
  
  return optionenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optionenddate(::std::string* optionenddate) {
  if (optionenddate != NULL) {
    
  } else {
    
  }
  optionenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionenddate);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionEndDate)
}

// optional string OptionExerciseDate = 51;
void MDBasicInfo::clear_optionexercisedate() {
  optionexercisedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optionexercisedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionExerciseDate)
  return optionexercisedate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optionexercisedate(const ::std::string& value) {
  
  optionexercisedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionExerciseDate)
}
void MDBasicInfo::set_optionexercisedate(const char* value) {
  
  optionexercisedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionExerciseDate)
}
void MDBasicInfo::set_optionexercisedate(const char* value, size_t size) {
  
  optionexercisedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionExerciseDate)
}
::std::string* MDBasicInfo::mutable_optionexercisedate() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionExerciseDate)
  return optionexercisedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optionexercisedate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionExerciseDate)
  
  return optionexercisedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optionexercisedate(::std::string* optionexercisedate) {
  if (optionexercisedate != NULL) {
    
  } else {
    
  }
  optionexercisedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionexercisedate);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionExerciseDate)
}

// optional string OptionDeliveryDate = 52;
void MDBasicInfo::clear_optiondeliverydate() {
  optiondeliverydate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optiondeliverydate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionDeliveryDate)
  return optiondeliverydate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optiondeliverydate(const ::std::string& value) {
  
  optiondeliverydate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionDeliveryDate)
}
void MDBasicInfo::set_optiondeliverydate(const char* value) {
  
  optiondeliverydate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionDeliveryDate)
}
void MDBasicInfo::set_optiondeliverydate(const char* value, size_t size) {
  
  optiondeliverydate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionDeliveryDate)
}
::std::string* MDBasicInfo::mutable_optiondeliverydate() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionDeliveryDate)
  return optiondeliverydate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optiondeliverydate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionDeliveryDate)
  
  return optiondeliverydate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optiondeliverydate(::std::string* optiondeliverydate) {
  if (optiondeliverydate != NULL) {
    
  } else {
    
  }
  optiondeliverydate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optiondeliverydate);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionDeliveryDate)
}

// optional string OptionExpireDate = 53;
void MDBasicInfo::clear_optionexpiredate() {
  optionexpiredate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optionexpiredate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionExpireDate)
  return optionexpiredate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optionexpiredate(const ::std::string& value) {
  
  optionexpiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionExpireDate)
}
void MDBasicInfo::set_optionexpiredate(const char* value) {
  
  optionexpiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionExpireDate)
}
void MDBasicInfo::set_optionexpiredate(const char* value, size_t size) {
  
  optionexpiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionExpireDate)
}
::std::string* MDBasicInfo::mutable_optionexpiredate() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionExpireDate)
  return optionexpiredate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optionexpiredate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionExpireDate)
  
  return optionexpiredate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optionexpiredate(::std::string* optionexpiredate) {
  if (optionexpiredate != NULL) {
    
  } else {
    
  }
  optionexpiredate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionexpiredate);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionExpireDate)
}

// optional string OptionUpdateVersion = 54;
void MDBasicInfo::clear_optionupdateversion() {
  optionupdateversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optionupdateversion() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionUpdateVersion)
  return optionupdateversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optionupdateversion(const ::std::string& value) {
  
  optionupdateversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionUpdateVersion)
}
void MDBasicInfo::set_optionupdateversion(const char* value) {
  
  optionupdateversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionUpdateVersion)
}
void MDBasicInfo::set_optionupdateversion(const char* value, size_t size) {
  
  optionupdateversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionUpdateVersion)
}
::std::string* MDBasicInfo::mutable_optionupdateversion() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionUpdateVersion)
  return optionupdateversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optionupdateversion() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionUpdateVersion)
  
  return optionupdateversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optionupdateversion(::std::string* optionupdateversion) {
  if (optionupdateversion != NULL) {
    
  } else {
    
  }
  optionupdateversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionupdateversion);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionUpdateVersion)
}

// optional int64 OptionTotalLongPosition = 55;
void MDBasicInfo::clear_optiontotallongposition() {
  optiontotallongposition_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::optiontotallongposition() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionTotalLongPosition)
  return optiontotallongposition_;
}
void MDBasicInfo::set_optiontotallongposition(::google::protobuf::int64 value) {
  
  optiontotallongposition_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionTotalLongPosition)
}

// optional double OptionSecurityClosePx = 56;
void MDBasicInfo::clear_optionsecurityclosepx() {
  optionsecurityclosepx_ = 0;
}
double MDBasicInfo::optionsecurityclosepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityClosePx)
  return optionsecurityclosepx_;
}
void MDBasicInfo::set_optionsecurityclosepx(double value) {
  
  optionsecurityclosepx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityClosePx)
}

// optional double OptionSettlPrice = 57;
void MDBasicInfo::clear_optionsettlprice() {
  optionsettlprice_ = 0;
}
double MDBasicInfo::optionsettlprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionSettlPrice)
  return optionsettlprice_;
}
void MDBasicInfo::set_optionsettlprice(double value) {
  
  optionsettlprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionSettlPrice)
}

// optional double OptionUnderlyingClosePx = 58;
void MDBasicInfo::clear_optionunderlyingclosepx() {
  optionunderlyingclosepx_ = 0;
}
double MDBasicInfo::optionunderlyingclosepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingClosePx)
  return optionunderlyingclosepx_;
}
void MDBasicInfo::set_optionunderlyingclosepx(double value) {
  
  optionunderlyingclosepx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionUnderlyingClosePx)
}

// optional string OptionPriceLimitType = 59;
void MDBasicInfo::clear_optionpricelimittype() {
  optionpricelimittype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optionpricelimittype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionPriceLimitType)
  return optionpricelimittype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optionpricelimittype(const ::std::string& value) {
  
  optionpricelimittype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionPriceLimitType)
}
void MDBasicInfo::set_optionpricelimittype(const char* value) {
  
  optionpricelimittype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionPriceLimitType)
}
void MDBasicInfo::set_optionpricelimittype(const char* value, size_t size) {
  
  optionpricelimittype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionPriceLimitType)
}
::std::string* MDBasicInfo::mutable_optionpricelimittype() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionPriceLimitType)
  return optionpricelimittype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optionpricelimittype() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionPriceLimitType)
  
  return optionpricelimittype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optionpricelimittype(::std::string* optionpricelimittype) {
  if (optionpricelimittype != NULL) {
    
  } else {
    
  }
  optionpricelimittype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionpricelimittype);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionPriceLimitType)
}

// optional double OptionDailyPriceUpLimit = 60;
void MDBasicInfo::clear_optiondailypriceuplimit() {
  optiondailypriceuplimit_ = 0;
}
double MDBasicInfo::optiondailypriceuplimit() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionDailyPriceUpLimit)
  return optiondailypriceuplimit_;
}
void MDBasicInfo::set_optiondailypriceuplimit(double value) {
  
  optiondailypriceuplimit_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionDailyPriceUpLimit)
}

// optional double OptionDailyPriceDownLimit = 61;
void MDBasicInfo::clear_optiondailypricedownlimit() {
  optiondailypricedownlimit_ = 0;
}
double MDBasicInfo::optiondailypricedownlimit() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionDailyPriceDownLimit)
  return optiondailypricedownlimit_;
}
void MDBasicInfo::set_optiondailypricedownlimit(double value) {
  
  optiondailypricedownlimit_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionDailyPriceDownLimit)
}

// optional double OptionMarginUnit = 62;
void MDBasicInfo::clear_optionmarginunit() {
  optionmarginunit_ = 0;
}
double MDBasicInfo::optionmarginunit() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionMarginUnit)
  return optionmarginunit_;
}
void MDBasicInfo::set_optionmarginunit(double value) {
  
  optionmarginunit_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionMarginUnit)
}

// optional double OptionMarginRatioParam1 = 63;
void MDBasicInfo::clear_optionmarginratioparam1() {
  optionmarginratioparam1_ = 0;
}
double MDBasicInfo::optionmarginratioparam1() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionMarginRatioParam1)
  return optionmarginratioparam1_;
}
void MDBasicInfo::set_optionmarginratioparam1(double value) {
  
  optionmarginratioparam1_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionMarginRatioParam1)
}

// optional double OptionMarginRatioParam2 = 64;
void MDBasicInfo::clear_optionmarginratioparam2() {
  optionmarginratioparam2_ = 0;
}
double MDBasicInfo::optionmarginratioparam2() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionMarginRatioParam2)
  return optionmarginratioparam2_;
}
void MDBasicInfo::set_optionmarginratioparam2(double value) {
  
  optionmarginratioparam2_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionMarginRatioParam2)
}

// optional int64 OptionRoundLot = 65;
void MDBasicInfo::clear_optionroundlot() {
  optionroundlot_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::optionroundlot() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionRoundLot)
  return optionroundlot_;
}
void MDBasicInfo::set_optionroundlot(::google::protobuf::int64 value) {
  
  optionroundlot_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionRoundLot)
}

// optional int64 OptionLmtOrdMinFloor = 66;
void MDBasicInfo::clear_optionlmtordminfloor() {
  optionlmtordminfloor_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::optionlmtordminfloor() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionLmtOrdMinFloor)
  return optionlmtordminfloor_;
}
void MDBasicInfo::set_optionlmtordminfloor(::google::protobuf::int64 value) {
  
  optionlmtordminfloor_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionLmtOrdMinFloor)
}

// optional int64 OptionLmtOrdMaxFloor = 67;
void MDBasicInfo::clear_optionlmtordmaxfloor() {
  optionlmtordmaxfloor_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::optionlmtordmaxfloor() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionLmtOrdMaxFloor)
  return optionlmtordmaxfloor_;
}
void MDBasicInfo::set_optionlmtordmaxfloor(::google::protobuf::int64 value) {
  
  optionlmtordmaxfloor_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionLmtOrdMaxFloor)
}

// optional int64 OptionMktOrdMinFloor = 68;
void MDBasicInfo::clear_optionmktordminfloor() {
  optionmktordminfloor_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::optionmktordminfloor() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionMktOrdMinFloor)
  return optionmktordminfloor_;
}
void MDBasicInfo::set_optionmktordminfloor(::google::protobuf::int64 value) {
  
  optionmktordminfloor_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionMktOrdMinFloor)
}

// optional int64 OptionMktOrdMaxFloor = 69;
void MDBasicInfo::clear_optionmktordmaxfloor() {
  optionmktordmaxfloor_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MDBasicInfo::optionmktordmaxfloor() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionMktOrdMaxFloor)
  return optionmktordmaxfloor_;
}
void MDBasicInfo::set_optionmktordmaxfloor(::google::protobuf::int64 value) {
  
  optionmktordmaxfloor_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionMktOrdMaxFloor)
}

// optional double OptionTickSize = 70;
void MDBasicInfo::clear_optionticksize() {
  optionticksize_ = 0;
}
double MDBasicInfo::optionticksize() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionTickSize)
  return optionticksize_;
}
void MDBasicInfo::set_optionticksize(double value) {
  
  optionticksize_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionTickSize)
}

// optional string OptionSecurityStatusFlag = 71;
void MDBasicInfo::clear_optionsecuritystatusflag() {
  optionsecuritystatusflag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::optionsecuritystatusflag() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityStatusFlag)
  return optionsecuritystatusflag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_optionsecuritystatusflag(const ::std::string& value) {
  
  optionsecuritystatusflag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityStatusFlag)
}
void MDBasicInfo::set_optionsecuritystatusflag(const char* value) {
  
  optionsecuritystatusflag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityStatusFlag)
}
void MDBasicInfo::set_optionsecuritystatusflag(const char* value, size_t size) {
  
  optionsecuritystatusflag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityStatusFlag)
}
::std::string* MDBasicInfo::mutable_optionsecuritystatusflag() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityStatusFlag)
  return optionsecuritystatusflag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_optionsecuritystatusflag() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityStatusFlag)
  
  return optionsecuritystatusflag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_optionsecuritystatusflag(::std::string* optionsecuritystatusflag) {
  if (optionsecuritystatusflag != NULL) {
    
  } else {
    
  }
  optionsecuritystatusflag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionsecuritystatusflag);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.OptionSecurityStatusFlag)
}

// optional string FITradeProductType = 80;
void MDBasicInfo::clear_fitradeproducttype() {
  fitradeproducttype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fitradeproducttype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FITradeProductType)
  return fitradeproducttype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fitradeproducttype(const ::std::string& value) {
  
  fitradeproducttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FITradeProductType)
}
void MDBasicInfo::set_fitradeproducttype(const char* value) {
  
  fitradeproducttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FITradeProductType)
}
void MDBasicInfo::set_fitradeproducttype(const char* value, size_t size) {
  
  fitradeproducttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FITradeProductType)
}
::std::string* MDBasicInfo::mutable_fitradeproducttype() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FITradeProductType)
  return fitradeproducttype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fitradeproducttype() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FITradeProductType)
  
  return fitradeproducttype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fitradeproducttype(::std::string* fitradeproducttype) {
  if (fitradeproducttype != NULL) {
    
  } else {
    
  }
  fitradeproducttype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fitradeproducttype);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FITradeProductType)
}

// optional string FISecurityProperty = 81;
void MDBasicInfo::clear_fisecurityproperty() {
  fisecurityproperty_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fisecurityproperty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityProperty)
  return fisecurityproperty_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fisecurityproperty(const ::std::string& value) {
  
  fisecurityproperty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityProperty)
}
void MDBasicInfo::set_fisecurityproperty(const char* value) {
  
  fisecurityproperty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityProperty)
}
void MDBasicInfo::set_fisecurityproperty(const char* value, size_t size) {
  
  fisecurityproperty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityProperty)
}
::std::string* MDBasicInfo::mutable_fisecurityproperty() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityProperty)
  return fisecurityproperty_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fisecurityproperty() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityProperty)
  
  return fisecurityproperty_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fisecurityproperty(::std::string* fisecurityproperty) {
  if (fisecurityproperty != NULL) {
    
  } else {
    
  }
  fisecurityproperty_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fisecurityproperty);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityProperty)
}

// optional string FISecurityStatus = 82;
void MDBasicInfo::clear_fisecuritystatus() {
  fisecuritystatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fisecuritystatus() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityStatus)
  return fisecuritystatus_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fisecuritystatus(const ::std::string& value) {
  
  fisecuritystatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityStatus)
}
void MDBasicInfo::set_fisecuritystatus(const char* value) {
  
  fisecuritystatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityStatus)
}
void MDBasicInfo::set_fisecuritystatus(const char* value, size_t size) {
  
  fisecuritystatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityStatus)
}
::std::string* MDBasicInfo::mutable_fisecuritystatus() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityStatus)
  return fisecuritystatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fisecuritystatus() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityStatus)
  
  return fisecuritystatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fisecuritystatus(::std::string* fisecuritystatus) {
  if (fisecuritystatus != NULL) {
    
  } else {
    
  }
  fisecuritystatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fisecuritystatus);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FISecurityStatus)
}

// optional string FIPledgedSecurityID = 83;
void MDBasicInfo::clear_fipledgedsecurityid() {
  fipledgedsecurityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fipledgedsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIPledgedSecurityID)
  return fipledgedsecurityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fipledgedsecurityid(const ::std::string& value) {
  
  fipledgedsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIPledgedSecurityID)
}
void MDBasicInfo::set_fipledgedsecurityid(const char* value) {
  
  fipledgedsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FIPledgedSecurityID)
}
void MDBasicInfo::set_fipledgedsecurityid(const char* value, size_t size) {
  
  fipledgedsecurityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FIPledgedSecurityID)
}
::std::string* MDBasicInfo::mutable_fipledgedsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FIPledgedSecurityID)
  return fipledgedsecurityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fipledgedsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FIPledgedSecurityID)
  
  return fipledgedsecurityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fipledgedsecurityid(::std::string* fipledgedsecurityid) {
  if (fipledgedsecurityid != NULL) {
    
  } else {
    
  }
  fipledgedsecurityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fipledgedsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FIPledgedSecurityID)
}

// optional string FIOpenTime = 84;
void MDBasicInfo::clear_fiopentime() {
  fiopentime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fiopentime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIOpenTime)
  return fiopentime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fiopentime(const ::std::string& value) {
  
  fiopentime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIOpenTime)
}
void MDBasicInfo::set_fiopentime(const char* value) {
  
  fiopentime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FIOpenTime)
}
void MDBasicInfo::set_fiopentime(const char* value, size_t size) {
  
  fiopentime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FIOpenTime)
}
::std::string* MDBasicInfo::mutable_fiopentime() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FIOpenTime)
  return fiopentime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fiopentime() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FIOpenTime)
  
  return fiopentime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fiopentime(::std::string* fiopentime) {
  if (fiopentime != NULL) {
    
  } else {
    
  }
  fiopentime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fiopentime);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FIOpenTime)
}

// optional string FICloseTime = 85;
void MDBasicInfo::clear_ficlosetime() {
  ficlosetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::ficlosetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FICloseTime)
  return ficlosetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_ficlosetime(const ::std::string& value) {
  
  ficlosetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FICloseTime)
}
void MDBasicInfo::set_ficlosetime(const char* value) {
  
  ficlosetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FICloseTime)
}
void MDBasicInfo::set_ficlosetime(const char* value, size_t size) {
  
  ficlosetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FICloseTime)
}
::std::string* MDBasicInfo::mutable_ficlosetime() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FICloseTime)
  return ficlosetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_ficlosetime() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FICloseTime)
  
  return ficlosetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_ficlosetime(::std::string* ficlosetime) {
  if (ficlosetime != NULL) {
    
  } else {
    
  }
  ficlosetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ficlosetime);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FICloseTime)
}

// optional string FIIssueMode = 86;
void MDBasicInfo::clear_fiissuemode() {
  fiissuemode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fiissuemode() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMode)
  return fiissuemode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fiissuemode(const ::std::string& value) {
  
  fiissuemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMode)
}
void MDBasicInfo::set_fiissuemode(const char* value) {
  
  fiissuemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMode)
}
void MDBasicInfo::set_fiissuemode(const char* value, size_t size) {
  
  fiissuemode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMode)
}
::std::string* MDBasicInfo::mutable_fiissuemode() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMode)
  return fiissuemode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fiissuemode() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMode)
  
  return fiissuemode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fiissuemode(::std::string* fiissuemode) {
  if (fiissuemode != NULL) {
    
  } else {
    
  }
  fiissuemode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fiissuemode);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMode)
}

// optional double FIFaceAmount = 87;
void MDBasicInfo::clear_fifaceamount() {
  fifaceamount_ = 0;
}
double MDBasicInfo::fifaceamount() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIFaceAmount)
  return fifaceamount_;
}
void MDBasicInfo::set_fifaceamount(double value) {
  
  fifaceamount_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIFaceAmount)
}

// optional double FIIssuePrice = 88;
void MDBasicInfo::clear_fiissueprice() {
  fiissueprice_ = 0;
}
double MDBasicInfo::fiissueprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIIssuePrice)
  return fiissueprice_;
}
void MDBasicInfo::set_fiissueprice(double value) {
  
  fiissueprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIIssuePrice)
}

// optional string FIInterestType = 89;
void MDBasicInfo::clear_fiinteresttype() {
  fiinteresttype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fiinteresttype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestType)
  return fiinteresttype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fiinteresttype(const ::std::string& value) {
  
  fiinteresttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestType)
}
void MDBasicInfo::set_fiinteresttype(const char* value) {
  
  fiinteresttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestType)
}
void MDBasicInfo::set_fiinteresttype(const char* value, size_t size) {
  
  fiinteresttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestType)
}
::std::string* MDBasicInfo::mutable_fiinteresttype() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestType)
  return fiinteresttype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fiinteresttype() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestType)
  
  return fiinteresttype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fiinteresttype(::std::string* fiinteresttype) {
  if (fiinteresttype != NULL) {
    
  } else {
    
  }
  fiinteresttype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fiinteresttype);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestType)
}

// optional string FIInterestFrequency = 90;
void MDBasicInfo::clear_fiinterestfrequency() {
  fiinterestfrequency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fiinterestfrequency() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestFrequency)
  return fiinterestfrequency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fiinterestfrequency(const ::std::string& value) {
  
  fiinterestfrequency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestFrequency)
}
void MDBasicInfo::set_fiinterestfrequency(const char* value) {
  
  fiinterestfrequency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestFrequency)
}
void MDBasicInfo::set_fiinterestfrequency(const char* value, size_t size) {
  
  fiinterestfrequency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestFrequency)
}
::std::string* MDBasicInfo::mutable_fiinterestfrequency() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestFrequency)
  return fiinterestfrequency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fiinterestfrequency() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestFrequency)
  
  return fiinterestfrequency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fiinterestfrequency(::std::string* fiinterestfrequency) {
  if (fiinterestfrequency != NULL) {
    
  } else {
    
  }
  fiinterestfrequency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fiinterestfrequency);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FIInterestFrequency)
}

// optional double FIGuaranteedInterestRate = 91;
void MDBasicInfo::clear_figuaranteedinterestrate() {
  figuaranteedinterestrate_ = 0;
}
double MDBasicInfo::figuaranteedinterestrate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIGuaranteedInterestRate)
  return figuaranteedinterestrate_;
}
void MDBasicInfo::set_figuaranteedinterestrate(double value) {
  
  figuaranteedinterestrate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIGuaranteedInterestRate)
}

// optional double FIBaseInterestRate = 92;
void MDBasicInfo::clear_fibaseinterestrate() {
  fibaseinterestrate_ = 0;
}
double MDBasicInfo::fibaseinterestrate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIBaseInterestRate)
  return fibaseinterestrate_;
}
void MDBasicInfo::set_fibaseinterestrate(double value) {
  
  fibaseinterestrate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIBaseInterestRate)
}

// optional double FIQuotedMargin = 93;
void MDBasicInfo::clear_fiquotedmargin() {
  fiquotedmargin_ = 0;
}
double MDBasicInfo::fiquotedmargin() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIQuotedMargin)
  return fiquotedmargin_;
}
void MDBasicInfo::set_fiquotedmargin(double value) {
  
  fiquotedmargin_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIQuotedMargin)
}

// optional int32 FITimeLimit = 94;
void MDBasicInfo::clear_fitimelimit() {
  fitimelimit_ = 0;
}
::google::protobuf::int32 MDBasicInfo::fitimelimit() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FITimeLimit)
  return fitimelimit_;
}
void MDBasicInfo::set_fitimelimit(::google::protobuf::int32 value) {
  
  fitimelimit_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FITimeLimit)
}

// optional double FITotalIssuance = 95;
void MDBasicInfo::clear_fitotalissuance() {
  fitotalissuance_ = 0;
}
double MDBasicInfo::fitotalissuance() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FITotalIssuance)
  return fitotalissuance_;
}
void MDBasicInfo::set_fitotalissuance(double value) {
  
  fitotalissuance_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FITotalIssuance)
}

// optional string FIIssueStartDate = 96;
void MDBasicInfo::clear_fiissuestartdate() {
  fiissuestartdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fiissuestartdate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueStartDate)
  return fiissuestartdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fiissuestartdate(const ::std::string& value) {
  
  fiissuestartdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueStartDate)
}
void MDBasicInfo::set_fiissuestartdate(const char* value) {
  
  fiissuestartdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueStartDate)
}
void MDBasicInfo::set_fiissuestartdate(const char* value, size_t size) {
  
  fiissuestartdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueStartDate)
}
::std::string* MDBasicInfo::mutable_fiissuestartdate() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueStartDate)
  return fiissuestartdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fiissuestartdate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueStartDate)
  
  return fiissuestartdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fiissuestartdate(::std::string* fiissuestartdate) {
  if (fiissuestartdate != NULL) {
    
  } else {
    
  }
  fiissuestartdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fiissuestartdate);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueStartDate)
}

// optional string FIIssueEndDate = 97;
void MDBasicInfo::clear_fiissueenddate() {
  fiissueenddate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fiissueenddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueEndDate)
  return fiissueenddate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fiissueenddate(const ::std::string& value) {
  
  fiissueenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueEndDate)
}
void MDBasicInfo::set_fiissueenddate(const char* value) {
  
  fiissueenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueEndDate)
}
void MDBasicInfo::set_fiissueenddate(const char* value, size_t size) {
  
  fiissueenddate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueEndDate)
}
::std::string* MDBasicInfo::mutable_fiissueenddate() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueEndDate)
  return fiissueenddate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fiissueenddate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueEndDate)
  
  return fiissueenddate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fiissueenddate(::std::string* fiissueenddate) {
  if (fiissueenddate != NULL) {
    
  } else {
    
  }
  fiissueenddate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fiissueenddate);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueEndDate)
}

// optional string FIListDate = 98;
void MDBasicInfo::clear_filistdate() {
  filistdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::filistdate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIListDate)
  return filistdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_filistdate(const ::std::string& value) {
  
  filistdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIListDate)
}
void MDBasicInfo::set_filistdate(const char* value) {
  
  filistdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FIListDate)
}
void MDBasicInfo::set_filistdate(const char* value, size_t size) {
  
  filistdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FIListDate)
}
::std::string* MDBasicInfo::mutable_filistdate() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FIListDate)
  return filistdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_filistdate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FIListDate)
  
  return filistdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_filistdate(::std::string* filistdate) {
  if (filistdate != NULL) {
    
  } else {
    
  }
  filistdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filistdate);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FIListDate)
}

// optional string FIExpireDate = 99;
void MDBasicInfo::clear_fiexpiredate() {
  fiexpiredate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fiexpiredate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIExpireDate)
  return fiexpiredate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fiexpiredate(const ::std::string& value) {
  
  fiexpiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIExpireDate)
}
void MDBasicInfo::set_fiexpiredate(const char* value) {
  
  fiexpiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FIExpireDate)
}
void MDBasicInfo::set_fiexpiredate(const char* value, size_t size) {
  
  fiexpiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FIExpireDate)
}
::std::string* MDBasicInfo::mutable_fiexpiredate() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FIExpireDate)
  return fiexpiredate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fiexpiredate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FIExpireDate)
  
  return fiexpiredate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fiexpiredate(::std::string* fiexpiredate) {
  if (fiexpiredate != NULL) {
    
  } else {
    
  }
  fiexpiredate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fiexpiredate);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FIExpireDate)
}

// optional string FINationalDebtType = 100;
void MDBasicInfo::clear_finationaldebttype() {
  finationaldebttype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::finationaldebttype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FINationalDebtType)
  return finationaldebttype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_finationaldebttype(const ::std::string& value) {
  
  finationaldebttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FINationalDebtType)
}
void MDBasicInfo::set_finationaldebttype(const char* value) {
  
  finationaldebttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FINationalDebtType)
}
void MDBasicInfo::set_finationaldebttype(const char* value, size_t size) {
  
  finationaldebttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FINationalDebtType)
}
::std::string* MDBasicInfo::mutable_finationaldebttype() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FINationalDebtType)
  return finationaldebttype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_finationaldebttype() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FINationalDebtType)
  
  return finationaldebttype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_finationaldebttype(::std::string* finationaldebttype) {
  if (finationaldebttype != NULL) {
    
  } else {
    
  }
  finationaldebttype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), finationaldebttype);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FINationalDebtType)
}

// optional string FIIssueMethod = 101;
void MDBasicInfo::clear_fiissuemethod() {
  fiissuemethod_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MDBasicInfo::fiissuemethod() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMethod)
  return fiissuemethod_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_fiissuemethod(const ::std::string& value) {
  
  fiissuemethod_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMethod)
}
void MDBasicInfo::set_fiissuemethod(const char* value) {
  
  fiissuemethod_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMethod)
}
void MDBasicInfo::set_fiissuemethod(const char* value, size_t size) {
  
  fiissuemethod_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMethod)
}
::std::string* MDBasicInfo::mutable_fiissuemethod() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMethod)
  return fiissuemethod_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MDBasicInfo::release_fiissuemethod() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMethod)
  
  return fiissuemethod_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MDBasicInfo::set_allocated_fiissuemethod(::std::string* fiissuemethod) {
  if (fiissuemethod != NULL) {
    
  } else {
    
  }
  fiissuemethod_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fiissuemethod);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDBasicInfo.FIIssueMethod)
}

// optional bool FICrossMarket = 102;
void MDBasicInfo::clear_ficrossmarket() {
  ficrossmarket_ = false;
}
bool MDBasicInfo::ficrossmarket() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FICrossMarket)
  return ficrossmarket_;
}
void MDBasicInfo::set_ficrossmarket(bool value) {
  
  ficrossmarket_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FICrossMarket)
}

// optional bool FIShortSellFlag = 103;
void MDBasicInfo::clear_fishortsellflag() {
  fishortsellflag_ = false;
}
bool MDBasicInfo::fishortsellflag() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIShortSellFlag)
  return fishortsellflag_;
}
void MDBasicInfo::set_fishortsellflag(bool value) {
  
  fishortsellflag_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIShortSellFlag)
}

// optional double FITotalShortSellQuota = 104;
void MDBasicInfo::clear_fitotalshortsellquota() {
  fitotalshortsellquota_ = 0;
}
double MDBasicInfo::fitotalshortsellquota() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FITotalShortSellQuota)
  return fitotalshortsellquota_;
}
void MDBasicInfo::set_fitotalshortsellquota(double value) {
  
  fitotalshortsellquota_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FITotalShortSellQuota)
}

// optional double FIDealerShortSellQuota = 105;
void MDBasicInfo::clear_fidealershortsellquota() {
  fidealershortsellquota_ = 0;
}
double MDBasicInfo::fidealershortsellquota() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIDealerShortSellQuota)
  return fidealershortsellquota_;
}
void MDBasicInfo::set_fidealershortsellquota(double value) {
  
  fidealershortsellquota_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIDealerShortSellQuota)
}

// optional double FIPreClosePx = 106;
void MDBasicInfo::clear_fipreclosepx() {
  fipreclosepx_ = 0;
}
double MDBasicInfo::fipreclosepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIPreClosePx)
  return fipreclosepx_;
}
void MDBasicInfo::set_fipreclosepx(double value) {
  
  fipreclosepx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIPreClosePx)
}

// optional double FIPreWeightedPx = 107;
void MDBasicInfo::clear_fipreweightedpx() {
  fipreweightedpx_ = 0;
}
double MDBasicInfo::fipreweightedpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDBasicInfo.FIPreWeightedPx)
  return fipreweightedpx_;
}
void MDBasicInfo::set_fipreweightedpx(double value) {
  
  fipreweightedpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDBasicInfo.FIPreWeightedPx)
}

inline const MDBasicInfo* MDBasicInfo::internal_default_instance() {
  return &MDBasicInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)
